Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator declaration_list compound_statement
    6                    | declaration_specifiers declarator compound_statement
    7                    | declarator declaration_list compound_statement
    8                    | declarator compound_statement

    9 declaration: declaration_specifiers ';'
   10            | declaration_specifiers init_declarator_list ';'

   11 declaration_list: declaration
   12                 | declaration_list declaration

   13 declaration_specifiers: storage_class_specifier
   14                       | storage_class_specifier declaration_specifiers
   15                       | type_specifier
   16                       | type_specifier declaration_specifiers
   17                       | type_qualifier
   18                       | type_qualifier declaration_specifiers

   19 init_declarator_list: init_declarator
   20                     | init_declarator_list ',' init_declarator
   21                     | init_declarator_list ',' error

   22 init_declarator: declarator
   23                | declarator '=' initializer
   24                | declarator error

   25 storage_class_specifier: "auto"
   26                        | "register"
   27                        | "static"
   28                        | "extern"
   29                        | "typedef"

   30 type_specifier: "void"
   31               | "char"
   32               | "short"
   33               | "int"
   34               | "long"
   35               | "float"
   36               | "double"
   37               | "signed"
   38               | "unsigned"
   39               | struct_or_union_specifier
   40               | enum_specifier
   41               | NOMBRE_DE_TYPEDEF

   42 type_qualifier: "const"
   43               | "volatile"

   44 $@1: /* empty */

   45 struct_or_union_specifier: struct_or_union $@1 factorizacion_struct_or_union_specifier

   46 $@2: /* empty */

   47 factorizacion_struct_or_union_specifier: '{' $@2 struct_declaration_list '}'

   48 $@3: /* empty */

   49 factorizacion_struct_or_union_specifier: IDENTIFICADOR '{' $@3 struct_declaration_list '}'
   50                                        | IDENTIFICADOR

   51 struct_or_union: "struct"
   52                | "union"

   53 struct_declaration_list: struct_declaration
   54                        | struct_declaration_list struct_declaration

   55 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

   56 specifier_qualifier_list: type_specifier
   57                         | type_specifier specifier_qualifier_list
   58                         | type_qualifier
   59                         | type_qualifier specifier_qualifier_list

   60 struct_declarator_list: struct_declarator
   61                       | struct_declarator_list ',' struct_declarator

   62 struct_declarator: declarator
   63                  | ':' constant_expression
   64                  | declarator ':' constant_expression

   65 $@4: /* empty */

   66 enum_specifier: "enum" $@4 factorizacion_enum_specifier

   67 factorizacion_enum_specifier: '{' enumerator_list '}'
   68                             | IDENTIFICADOR '{' enumerator_list '}'
   69                             | IDENTIFICADOR

   70 enumerator_list: enumerator
   71                | enumerator_list ',' enumerator

   72 enumerator: IDENTIFICADOR
   73           | IDENTIFICADOR '=' constant_expression

   74 declarator: pointer direct_declarator
   75           | direct_declarator

   76 direct_declarator: IDENTIFICADOR
   77                  | '(' declarator ')'
   78                  | direct_declarator '[' constant_expression ']'
   79                  | direct_declarator '[' ']'

   80 $@5: /* empty */

   81 direct_declarator: direct_declarator '(' $@5 factorizacion_direct_declarator

   82 factorizacion_direct_declarator: parameter_type_list ')'
   83                                | identifier_list ')'
   84                                | ')'

   85 $@6: /* empty */

   86 pointer: '*' $@6 factorizacion_pointer

   87 factorizacion_pointer: /* empty */
   88                      | type_qualifier_list
   89                      | pointer
   90                      | type_qualifier_list pointer

   91 type_qualifier_list: type_qualifier
   92                    | type_qualifier_list type_qualifier

   93 parameter_type_list: parameter_list
   94                    | parameter_list ',' "..."

   95 parameter_list: parameter_declaration
   96               | parameter_list ',' parameter_declaration

   97 parameter_declaration: declaration_specifiers declarator
   98                      | declaration_specifiers abstract_declarator
   99                      | declaration_specifiers

  100 identifier_list: IDENTIFICADOR
  101                | identifier_list ',' IDENTIFICADOR

  102 initializer: assignment_expression
  103            | '{' initializer_list '}'
  104            | '{' initializer_list ',' '}'

  105 initializer_list: initializer
  106                 | initializer_list ',' initializer

  107 type_name: specifier_qualifier_list
  108          | specifier_qualifier_list abstract_declarator

  109 abstract_declarator: pointer
  110                    | direct_abstract_declarator
  111                    | pointer direct_abstract_declarator

  112 direct_abstract_declarator: '(' abstract_declarator ')'
  113                           | '[' ']'
  114                           | '[' constant_expression ']'
  115                           | direct_abstract_declarator '[' ']'
  116                           | direct_abstract_declarator '[' constant_expression ']'
  117                           | '(' ')'
  118                           | '(' parameter_type_list ')'
  119                           | direct_abstract_declarator '(' ')'
  120                           | direct_abstract_declarator '(' parameter_type_list ')'

  121 statement: labeled_statement
  122          | expression_statement
  123          | compound_statement
  124          | selection_statement
  125          | iteration_statement
  126          | jump_statement

  127 $@7: /* empty */

  128 labeled_statement: IDENTIFICADOR $@7 ':' statement

  129 $@8: /* empty */

  130 labeled_statement: NOMBRE_DE_TYPEDEF $@8 ':' statement

  131 $@9: /* empty */

  132 labeled_statement: "case" $@9 constant_expression ':' statement
  133                  | "case" error

  134 $@10: /* empty */

  135 labeled_statement: "default" $@10 ':' statement

  136 expression_statement: ';'
  137                     | expression ';'

  138 $@11: /* empty */

  139 compound_statement: '{' $@11 factorizacion_compound_statement

  140 factorizacion_compound_statement: '}'
  141                                 | statement_list '}'
  142                                 | declaration_list '}'
  143                                 | declaration_list statement_list '}'

  144 statement_list: statement
  145               | statement_list statement

  146 $@12: /* empty */

  147 selection_statement: "if" $@12 factorizacion_selection_statement

  148 $@13: /* empty */

  149 selection_statement: "switch" $@13 '(' expression ')' statement

  150 factorizacion_selection_statement: '(' expression ')' statement
  151                                  | '(' expression ')' statement "else" statement
  152                                  | '(' error

  153 $@14: /* empty */

  154 iteration_statement: "while" $@14 '(' expression ')' statement

  155 $@15: /* empty */

  156 iteration_statement: "do" $@15 statement "while" '(' expression ')' ';'

  157 $@16: /* empty */

  158 iteration_statement: "for" $@16 factorizacion_iteration_statement

  159 factorizacion_iteration_statement: '(' expression_statement expression_statement ')' statement
  160                                  | '(' expression_statement expression_statement expression ')' statement

  161 $@17: /* empty */

  162 jump_statement: "goto" $@17 IDENTIFICADOR ';'

  163 $@18: /* empty */

  164 jump_statement: "continue" $@18 ';'

  165 $@19: /* empty */

  166 jump_statement: "break" $@19 ';'

  167 $@20: /* empty */

  168 jump_statement: "return" $@20 factorizacion_jump_statement

  169 factorizacion_jump_statement: ';'
  170                             | expression ';'

  171 expression: assignment_expression
  172           | expression ',' assignment_expression
  173           | expression ',' error

  174 assignment_expression: conditional_expression
  175                      | unary_expression assignment_operator assignment_expression

  176 assignment_operator: '='
  177                    | "*="
  178                    | "/="
  179                    | "%="
  180                    | "+="
  181                    | "-="
  182                    | "<<="
  183                    | ">>="
  184                    | "&="
  185                    | "^="
  186                    | "|="

  187 constant_expression: conditional_expression

  188 conditional_expression: logical_or_expression
  189                       | logical_or_expression '?' expression ':' conditional_expression
  190                       | logical_or_expression '?' error ':' conditional_expression
  191                       | logical_or_expression '?' expression ':' error

  192 logical_or_expression: logical_and_expression
  193                      | logical_or_expression "||" logical_and_expression
  194                      | logical_or_expression "||" error

  195 logical_and_expression: inclusive_or_expression
  196                       | logical_and_expression "&&" inclusive_or_expression
  197                       | logical_and_expression "&&" error

  198 inclusive_or_expression: exclusive_or_expression
  199                        | inclusive_or_expression '|' exclusive_or_expression

  200 exclusive_or_expression: and_expression
  201                        | exclusive_or_expression '^' and_expression

  202 and_expression: equality_expression
  203               | and_expression '&' equality_expression
  204               | and_expression '&' error

  205 equality_expression: relational_expression
  206                    | equality_expression "==" relational_expression
  207                    | equality_expression "==" error
  208                    | equality_expression "!=" relational_expression
  209                    | equality_expression "!=" error

  210 relational_expression: shift_expression
  211                      | relational_expression '<' shift_expression
  212                      | relational_expression '<' error
  213                      | relational_expression '>' shift_expression
  214                      | relational_expression '>' error
  215                      | relational_expression "<=" shift_expression
  216                      | relational_expression "<=" error
  217                      | relational_expression ">=" shift_expression
  218                      | relational_expression ">=" error

  219 shift_expression: additive_expression
  220                 | shift_expression "<<" additive_expression
  221                 | shift_expression ">>" additive_expression

  222 additive_expression: multiplicative_expression
  223                    | additive_expression '+' multiplicative_expression
  224                    | additive_expression '+' error
  225                    | additive_expression '-' multiplicative_expression
  226                    | additive_expression '-' error

  227 multiplicative_expression: cast_expression
  228                          | multiplicative_expression '*' cast_expression
  229                          | multiplicative_expression '*' error
  230                          | multiplicative_expression '/' cast_expression
  231                          | multiplicative_expression '/' error
  232                          | multiplicative_expression '%' cast_expression
  233                          | multiplicative_expression '%' error

  234 cast_expression: unary_expression

  235 $@21: /* empty */

  236 cast_expression: '(' $@21 type_name ')' cast_expression

  237 unary_expression: postfix_expression

  238 $@22: /* empty */

  239 unary_expression: "++" $@22 unary_expression

  240 $@23: /* empty */

  241 unary_expression: "--" $@23 unary_expression
  242                 | unary_operator cast_expression

  243 $@24: /* empty */

  244 unary_expression: "sizeof" $@24 factorizacion_unary_expression

  245 factorizacion_unary_expression: unary_expression
  246                               | '(' type_name ')'

  247 unary_operator: '&'
  248               | '*'
  249               | '+'
  250               | '-'
  251               | '~'
  252               | '!'

  253 postfix_expression: primary_expression
  254                   | postfix_expression '[' expression ']'
  255                   | postfix_expression '(' ')'
  256                   | postfix_expression '(' argument_expression_list ')'
  257                   | postfix_expression '.' IDENTIFICADOR
  258                   | postfix_expression "->" IDENTIFICADOR
  259                   | postfix_expression "++"
  260                   | postfix_expression "--"

  261 argument_expression_list: assignment_expression
  262                         | argument_expression_list ',' assignment_expression

  263 primary_expression: IDENTIFICADOR
  264                   | constante_entera
  265                   | constante_real
  266                   | LITERAL_CADENA

  267 $@25: /* empty */

  268 primary_expression: '(' $@25 expression ')'

  269 constante_entera: CONSTANTE_ENTERA_INT_TYPE
  270                 | CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | CONSTANTE_ENTERA_LONG_TYPE
  272                 | CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE

  273 constante_real: CONSTANTE_REAL_FLOAT_TYPE
  274               | CONSTANTE_REAL_DOUBLE_TYPE
  275               | CONSTANTE_REAL_LONG_DOUBLE_TYPE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 252
'%' (37) 232 233
'&' (38) 203 204 247
'(' (40) 77 81 112 117 118 119 120 149 150 151 152 154 156 159 160
    236 246 255 256 268
')' (41) 77 82 83 84 112 117 118 119 120 149 150 151 154 156 159 160
    236 246 255 256 268
'*' (42) 86 228 229 248
'+' (43) 223 224 249
',' (44) 20 21 61 71 94 96 101 104 106 172 173 262
'-' (45) 225 226 250
'.' (46) 257
'/' (47) 230 231
':' (58) 63 64 128 130 132 135 189 190 191
';' (59) 9 10 55 136 137 156 162 164 166 169 170
'<' (60) 211 212
'=' (61) 23 73 176
'>' (62) 213 214
'?' (63) 189 190 191
'[' (91) 78 79 113 114 115 116 254
']' (93) 78 79 113 114 115 116 254
'^' (94) 201
'{' (123) 47 49 67 68 103 104 139
'|' (124) 199
'}' (125) 47 49 67 68 103 104 140 141 142 143
'~' (126) 251
error (256) 21 24 133 152 173 190 191 194 197 204 207 209 212 214 216
    218 224 226 229 231 233
THEN (258)
CONSTANTE_ENTERA_INT_TYPE (259) 269
CONSTANTE_ENTERA_UNSIGNED_INT_TYPE (260) 270
CONSTANTE_ENTERA_LONG_TYPE (261) 271
CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE (262) 272
CONSTANTE_REAL_FLOAT_TYPE (263) 273
CONSTANTE_REAL_LONG_DOUBLE_TYPE (264) 275
CONSTANTE_REAL_DOUBLE_TYPE (265) 274
LITERAL_CADENA (266) 266
"typedef" (267) 29
"extern" (268) 28
"static" (269) 27
"auto" (270) 25
"register" (271) 26
"void" (272) 30
"char" (273) 31
"short" (274) 32
"int" (275) 33
"long" (276) 34
"float" (277) 35
"double" (278) 36
"signed" (279) 37
"unsigned" (280) 38
"const" (281) 42
"volatile" (282) 43
"struct" (283) 51
"union" (284) 52
"enum" (285) 66
"if" (286) 147
"else" (287) 151
"switch" (288) 149
"while" (289) 154 156
"do" (290) 156
"for" (291) 158
"case" (292) 132 133
"default" (293) 135
"goto" (294) 162
"continue" (295) 164
"break" (296) 166
"return" (297) 168
"sizeof" (298) 244
IDENTIFICADOR (299) 49 50 68 69 72 73 76 100 101 128 162 257 258 263
NOMBRE_DE_TYPEDEF (300) 41 130
"..." (301) 94
"+=" (302) 180
"-=" (303) 181
"*=" (304) 177
"/=" (305) 178
"%=" (306) 179
"&=" (307) 184
"|=" (308) 186
"^=" (309) 185
"<<=" (310) 182
">>=" (311) 183
"||" (312) 193 194
"&&" (313) 196 197
"==" (314) 206 207
"!=" (315) 208 209
">=" (316) 217 218
"<=" (317) 215 216
"<<" (318) 220
">>" (319) 221
"->" (320) 258
"++" (321) 239 259
"--" (322) 241 260


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
translation_unit (93)
    on left: 1 2, on right: 0 2
external_declaration (94)
    on left: 3 4, on right: 1 2
function_definition (95)
    on left: 5 6 7 8, on right: 3
declaration (96)
    on left: 9 10, on right: 4 11 12
declaration_list (97)
    on left: 11 12, on right: 5 7 12 142 143
declaration_specifiers (98)
    on left: 13 14 15 16 17 18, on right: 5 6 9 10 14 16 18 97 98 99
init_declarator_list (99)
    on left: 19 20 21, on right: 10 20 21
init_declarator (100)
    on left: 22 23 24, on right: 19 20
storage_class_specifier (101)
    on left: 25 26 27 28 29, on right: 13 14
type_specifier (102)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41, on right: 15 16 56
    57
type_qualifier (103)
    on left: 42 43, on right: 17 18 58 59 91 92
struct_or_union_specifier (104)
    on left: 45, on right: 39
$@1 (105)
    on left: 44, on right: 45
factorizacion_struct_or_union_specifier (106)
    on left: 47 49 50, on right: 45
$@2 (107)
    on left: 46, on right: 47
$@3 (108)
    on left: 48, on right: 49
struct_or_union (109)
    on left: 51 52, on right: 45
struct_declaration_list (110)
    on left: 53 54, on right: 47 49 54
struct_declaration (111)
    on left: 55, on right: 53 54
specifier_qualifier_list (112)
    on left: 56 57 58 59, on right: 55 57 59 107 108
struct_declarator_list (113)
    on left: 60 61, on right: 55 61
struct_declarator (114)
    on left: 62 63 64, on right: 60 61
enum_specifier (115)
    on left: 66, on right: 40
$@4 (116)
    on left: 65, on right: 66
factorizacion_enum_specifier (117)
    on left: 67 68 69, on right: 66
enumerator_list (118)
    on left: 70 71, on right: 67 68 71
enumerator (119)
    on left: 72 73, on right: 70 71
declarator (120)
    on left: 74 75, on right: 5 6 7 8 22 23 24 62 64 77 97
direct_declarator (121)
    on left: 76 77 78 79 81, on right: 74 75 78 79 81
$@5 (122)
    on left: 80, on right: 81
factorizacion_direct_declarator (123)
    on left: 82 83 84, on right: 81
pointer (124)
    on left: 86, on right: 74 89 90 109 111
$@6 (125)
    on left: 85, on right: 86
factorizacion_pointer (126)
    on left: 87 88 89 90, on right: 86
type_qualifier_list (127)
    on left: 91 92, on right: 88 90 92
parameter_type_list (128)
    on left: 93 94, on right: 82 118 120
parameter_list (129)
    on left: 95 96, on right: 93 94 96
parameter_declaration (130)
    on left: 97 98 99, on right: 95 96
identifier_list (131)
    on left: 100 101, on right: 83 101
initializer (132)
    on left: 102 103 104, on right: 23 105 106
initializer_list (133)
    on left: 105 106, on right: 103 104 106
type_name (134)
    on left: 107 108, on right: 236 246
abstract_declarator (135)
    on left: 109 110 111, on right: 98 108 112
direct_abstract_declarator (136)
    on left: 112 113 114 115 116 117 118 119 120, on right: 110 111
    115 116 119 120
statement (137)
    on left: 121 122 123 124 125 126, on right: 128 130 132 135 144
    145 149 150 151 154 156 159 160
labeled_statement (138)
    on left: 128 130 132 133 135, on right: 121
$@7 (139)
    on left: 127, on right: 128
$@8 (140)
    on left: 129, on right: 130
$@9 (141)
    on left: 131, on right: 132
$@10 (142)
    on left: 134, on right: 135
expression_statement (143)
    on left: 136 137, on right: 122 159 160
compound_statement (144)
    on left: 139, on right: 5 6 7 8 123
$@11 (145)
    on left: 138, on right: 139
factorizacion_compound_statement (146)
    on left: 140 141 142 143, on right: 139
statement_list (147)
    on left: 144 145, on right: 141 143 145
selection_statement (148)
    on left: 147 149, on right: 124
$@12 (149)
    on left: 146, on right: 147
$@13 (150)
    on left: 148, on right: 149
factorizacion_selection_statement (151)
    on left: 150 151 152, on right: 147
iteration_statement (152)
    on left: 154 156 158, on right: 125
$@14 (153)
    on left: 153, on right: 154
$@15 (154)
    on left: 155, on right: 156
$@16 (155)
    on left: 157, on right: 158
factorizacion_iteration_statement (156)
    on left: 159 160, on right: 158
jump_statement (157)
    on left: 162 164 166 168, on right: 126
$@17 (158)
    on left: 161, on right: 162
$@18 (159)
    on left: 163, on right: 164
$@19 (160)
    on left: 165, on right: 166
$@20 (161)
    on left: 167, on right: 168
factorizacion_jump_statement (162)
    on left: 169 170, on right: 168
expression (163)
    on left: 171 172 173, on right: 137 149 150 151 154 156 160 170
    172 173 189 191 254 268
assignment_expression (164)
    on left: 174 175, on right: 102 171 172 175 261 262
assignment_operator (165)
    on left: 176 177 178 179 180 181 182 183 184 185 186, on right:
    175
constant_expression (166)
    on left: 187, on right: 63 64 73 78 114 116 132
conditional_expression (167)
    on left: 188 189 190 191, on right: 174 187 189 190
logical_or_expression (168)
    on left: 192 193 194, on right: 188 189 190 191 193 194
logical_and_expression (169)
    on left: 195 196 197, on right: 192 193 196 197
inclusive_or_expression (170)
    on left: 198 199, on right: 195 196 199
exclusive_or_expression (171)
    on left: 200 201, on right: 198 199 201
and_expression (172)
    on left: 202 203 204, on right: 200 201 203 204
equality_expression (173)
    on left: 205 206 207 208 209, on right: 202 203 206 207 208 209
relational_expression (174)
    on left: 210 211 212 213 214 215 216 217 218, on right: 205 206
    208 211 212 213 214 215 216 217 218
shift_expression (175)
    on left: 219 220 221, on right: 210 211 213 215 217 220 221
additive_expression (176)
    on left: 222 223 224 225 226, on right: 219 220 221 223 224 225
    226
multiplicative_expression (177)
    on left: 227 228 229 230 231 232 233, on right: 222 223 225 228
    229 230 231 232 233
cast_expression (178)
    on left: 234 236, on right: 227 228 230 232 236 242
$@21 (179)
    on left: 235, on right: 236
unary_expression (180)
    on left: 237 239 241 242 244, on right: 175 234 239 241 245
$@22 (181)
    on left: 238, on right: 239
$@23 (182)
    on left: 240, on right: 241
$@24 (183)
    on left: 243, on right: 244
factorizacion_unary_expression (184)
    on left: 245 246, on right: 244
unary_operator (185)
    on left: 247 248 249 250 251 252, on right: 242
postfix_expression (186)
    on left: 253 254 255 256 257 258 259 260, on right: 237 254 255
    256 257 258 259 260
argument_expression_list (187)
    on left: 261 262, on right: 256 262
primary_expression (188)
    on left: 263 264 265 266 268, on right: 253
$@25 (189)
    on left: 267, on right: 268
constante_entera (190)
    on left: 269 270 271 272, on right: 264
constante_real (191)
    on left: 273 274 275, on right: 265


state 0

    0 $accept: . translation_unit $end
    1 translation_unit: . external_declaration
    2                 | . translation_unit external_declaration
    3 external_declaration: . function_definition
    4                     | . declaration
    5 function_definition: . declaration_specifiers declarator declaration_list compound_statement
    6                    | . declaration_specifiers declarator compound_statement
    7                    | . declarator declaration_list compound_statement
    8                    | . declarator compound_statement
    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    IDENTIFICADOR      shift, and go to state 20
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '('                shift, and go to state 22
    '*'                shift, and go to state 23

    translation_unit           go to state 24
    external_declaration       go to state 25
    function_definition        go to state 26
    declaration                go to state 27
    declaration_specifiers     go to state 28
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 35
    direct_declarator          go to state 36
    pointer                    go to state 37


state 1

   29 storage_class_specifier: "typedef" .

    $default  reduce using rule 29 (storage_class_specifier)


state 2

   28 storage_class_specifier: "extern" .

    $default  reduce using rule 28 (storage_class_specifier)


state 3

   27 storage_class_specifier: "static" .

    $default  reduce using rule 27 (storage_class_specifier)


state 4

   25 storage_class_specifier: "auto" .

    $default  reduce using rule 25 (storage_class_specifier)


state 5

   26 storage_class_specifier: "register" .

    $default  reduce using rule 26 (storage_class_specifier)


state 6

   30 type_specifier: "void" .

    $default  reduce using rule 30 (type_specifier)


state 7

   31 type_specifier: "char" .

    $default  reduce using rule 31 (type_specifier)


state 8

   32 type_specifier: "short" .

    $default  reduce using rule 32 (type_specifier)


state 9

   33 type_specifier: "int" .

    $default  reduce using rule 33 (type_specifier)


state 10

   34 type_specifier: "long" .

    $default  reduce using rule 34 (type_specifier)


state 11

   35 type_specifier: "float" .

    $default  reduce using rule 35 (type_specifier)


state 12

   36 type_specifier: "double" .

    $default  reduce using rule 36 (type_specifier)


state 13

   37 type_specifier: "signed" .

    $default  reduce using rule 37 (type_specifier)


state 14

   38 type_specifier: "unsigned" .

    $default  reduce using rule 38 (type_specifier)


state 15

   42 type_qualifier: "const" .

    $default  reduce using rule 42 (type_qualifier)


state 16

   43 type_qualifier: "volatile" .

    $default  reduce using rule 43 (type_qualifier)


state 17

   51 struct_or_union: "struct" .

    $default  reduce using rule 51 (struct_or_union)


state 18

   52 struct_or_union: "union" .

    $default  reduce using rule 52 (struct_or_union)


state 19

   65 $@4: .
   66 enum_specifier: "enum" . $@4 factorizacion_enum_specifier

    $default  reduce using rule 65 ($@4)

    $@4  go to state 38


state 20

   76 direct_declarator: IDENTIFICADOR .

    $default  reduce using rule 76 (direct_declarator)


state 21

   41 type_specifier: NOMBRE_DE_TYPEDEF .

    $default  reduce using rule 41 (type_specifier)


state 22

   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   77                  | '(' . declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    IDENTIFICADOR  shift, and go to state 20
    '('            shift, and go to state 22
    '*'            shift, and go to state 23

    declarator         go to state 39
    direct_declarator  go to state 36
    pointer            go to state 37


state 23

   85 $@6: .
   86 pointer: '*' . $@6 factorizacion_pointer

    $default  reduce using rule 85 ($@6)

    $@6  go to state 40


state 24

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration
    3 external_declaration: . function_definition
    4                     | . declaration
    5 function_definition: . declaration_specifiers declarator declaration_list compound_statement
    6                    | . declaration_specifiers declarator compound_statement
    7                    | . declarator declaration_list compound_statement
    8                    | . declarator compound_statement
    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    $end               shift, and go to state 41
    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    IDENTIFICADOR      shift, and go to state 20
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '('                shift, and go to state 22
    '*'                shift, and go to state 23

    external_declaration       go to state 42
    function_definition        go to state 26
    declaration                go to state 27
    declaration_specifiers     go to state 28
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 35
    direct_declarator          go to state 36
    pointer                    go to state 37


state 25

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


state 26

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 27

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


state 28

    5 function_definition: declaration_specifiers . declarator declaration_list compound_statement
    6                    | declaration_specifiers . declarator compound_statement
    9 declaration: declaration_specifiers . ';'
   10            | declaration_specifiers . init_declarator_list ';'
   19 init_declarator_list: . init_declarator
   20                     | . init_declarator_list ',' init_declarator
   21                     | . init_declarator_list ',' error
   22 init_declarator: . declarator
   23                | . declarator '=' initializer
   24                | . declarator error
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    IDENTIFICADOR  shift, and go to state 20
    ';'            shift, and go to state 43
    '('            shift, and go to state 22
    '*'            shift, and go to state 23

    init_declarator_list  go to state 44
    init_declarator       go to state 45
    declarator            go to state 46
    direct_declarator     go to state 36
    pointer               go to state 37


state 29

   13 declaration_specifiers: . storage_class_specifier
   13                       | storage_class_specifier .  [IDENTIFICADOR, ';', ',', '(', ')', '[', '*']
   14                       | . storage_class_specifier declaration_specifiers
   14                       | storage_class_specifier . declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    $default  reduce using rule 13 (declaration_specifiers)

    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


state 30

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   15                       | type_specifier .  [IDENTIFICADOR, ';', ',', '(', ')', '[', '*']
   16                       | . type_specifier declaration_specifiers
   16                       | type_specifier . declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    $default  reduce using rule 15 (declaration_specifiers)

    declaration_specifiers     go to state 48
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


state 31

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   17                       | type_qualifier .  [IDENTIFICADOR, ';', ',', '(', ')', '[', '*']
   18                       | . type_qualifier declaration_specifiers
   18                       | type_qualifier . declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    $default  reduce using rule 17 (declaration_specifiers)

    declaration_specifiers     go to state 49
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


state 32

   39 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 39 (type_specifier)


state 33

   44 $@1: .
   45 struct_or_union_specifier: struct_or_union . $@1 factorizacion_struct_or_union_specifier

    $default  reduce using rule 44 ($@1)

    $@1  go to state 50


state 34

   40 type_specifier: enum_specifier .

    $default  reduce using rule 40 (type_specifier)


state 35

    7 function_definition: declarator . declaration_list compound_statement
    8                    | declarator . compound_statement
    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   11 declaration_list: . declaration
   12                 | . declaration_list declaration
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  139 compound_statement: . '{' $@11 factorizacion_compound_statement

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '{'                shift, and go to state 51

    declaration                go to state 52
    declaration_list           go to state 53
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    compound_statement         go to state 55


state 36

   75 declarator: direct_declarator .  [error, "typedef", "extern", "static", "auto", "register", "void", "char", "short", "int", "long", "float", "double", "signed", "unsigned", "const", "volatile", "struct", "union", "enum", NOMBRE_DE_TYPEDEF, ';', ',', '=', '{', ':', ')']
   78 direct_declarator: direct_declarator . '[' constant_expression ']'
   79                  | direct_declarator . '[' ']'
   81                  | direct_declarator . '(' $@5 factorizacion_direct_declarator

    '('  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 75 (declarator)


state 37

   74 declarator: pointer . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator

    IDENTIFICADOR  shift, and go to state 20
    '('            shift, and go to state 22

    direct_declarator  go to state 58


state 38

   66 enum_specifier: "enum" $@4 . factorizacion_enum_specifier
   67 factorizacion_enum_specifier: . '{' enumerator_list '}'
   68                             | . IDENTIFICADOR '{' enumerator_list '}'
   69                             | . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 59
    '{'            shift, and go to state 60

    factorizacion_enum_specifier  go to state 61


state 39

   77 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 62


state 40

   42 type_qualifier: . "const"
   43               | . "volatile"
   86 pointer: . '*' $@6 factorizacion_pointer
   86        | '*' $@6 . factorizacion_pointer
   87 factorizacion_pointer: .  [IDENTIFICADOR, ',', '(', ')', '[']
   88                      | . type_qualifier_list
   89                      | . pointer
   90                      | . type_qualifier_list pointer
   91 type_qualifier_list: . type_qualifier
   92                    | . type_qualifier_list type_qualifier

    "const"     shift, and go to state 15
    "volatile"  shift, and go to state 16
    '*'         shift, and go to state 23

    $default  reduce using rule 87 (factorizacion_pointer)

    type_qualifier         go to state 63
    pointer                go to state 64
    factorizacion_pointer  go to state 65
    type_qualifier_list    go to state 66


state 41

    0 $accept: translation_unit $end .

    $default  accept


state 42

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 43

    9 declaration: declaration_specifiers ';' .

    $default  reduce using rule 9 (declaration)


state 44

   10 declaration: declaration_specifiers init_declarator_list . ';'
   20 init_declarator_list: init_declarator_list . ',' init_declarator
   21                     | init_declarator_list . ',' error

    ';'  shift, and go to state 67
    ','  shift, and go to state 68


state 45

   19 init_declarator_list: init_declarator .

    $default  reduce using rule 19 (init_declarator_list)


state 46

    5 function_definition: declaration_specifiers declarator . declaration_list compound_statement
    6                    | declaration_specifiers declarator . compound_statement
    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   11 declaration_list: . declaration
   12                 | . declaration_list declaration
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   22 init_declarator: declarator .  [';', ',']
   23                | declarator . '=' initializer
   24                | declarator . error
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  139 compound_statement: . '{' $@11 factorizacion_compound_statement

    error              shift, and go to state 69
    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '='                shift, and go to state 70
    '{'                shift, and go to state 51

    ';'  reduce using rule 22 (init_declarator)
    ','  reduce using rule 22 (init_declarator)

    declaration                go to state 52
    declaration_list           go to state 71
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    compound_statement         go to state 72


state 47

   14 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 14 (declaration_specifiers)


state 48

   16 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 16 (declaration_specifiers)


state 49

   18 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 18 (declaration_specifiers)


state 50

   45 struct_or_union_specifier: struct_or_union $@1 . factorizacion_struct_or_union_specifier
   47 factorizacion_struct_or_union_specifier: . '{' $@2 struct_declaration_list '}'
   49                                        | . IDENTIFICADOR '{' $@3 struct_declaration_list '}'
   50                                        | . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 73
    '{'            shift, and go to state 74

    factorizacion_struct_or_union_specifier  go to state 75


state 51

  138 $@11: .
  139 compound_statement: '{' . $@11 factorizacion_compound_statement

    $default  reduce using rule 138 ($@11)

    $@11  go to state 76


state 52

   11 declaration_list: declaration .

    $default  reduce using rule 11 (declaration_list)


state 53

    7 function_definition: declarator declaration_list . compound_statement
    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   12 declaration_list: declaration_list . declaration
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  139 compound_statement: . '{' $@11 factorizacion_compound_statement

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '{'                shift, and go to state 51

    declaration                go to state 77
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    compound_statement         go to state 78


state 54

    9 declaration: declaration_specifiers . ';'
   10            | declaration_specifiers . init_declarator_list ';'
   19 init_declarator_list: . init_declarator
   20                     | . init_declarator_list ',' init_declarator
   21                     | . init_declarator_list ',' error
   22 init_declarator: . declarator
   23                | . declarator '=' initializer
   24                | . declarator error
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    IDENTIFICADOR  shift, and go to state 20
    ';'            shift, and go to state 43
    '('            shift, and go to state 22
    '*'            shift, and go to state 23

    init_declarator_list  go to state 44
    init_declarator       go to state 45
    declarator            go to state 79
    direct_declarator     go to state 36
    pointer               go to state 37


state 55

    8 function_definition: declarator compound_statement .

    $default  reduce using rule 8 (function_definition)


state 56

   80 $@5: .
   81 direct_declarator: direct_declarator '(' . $@5 factorizacion_direct_declarator

    $default  reduce using rule 80 ($@5)

    $@5  go to state 80


state 57

   78 direct_declarator: direct_declarator '[' . constant_expression ']'
   79                  | direct_declarator '[' . ']'
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    ']'                                  shift, and go to state 94
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 101
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 58

   74 declarator: pointer direct_declarator .  [error, "typedef", "extern", "static", "auto", "register", "void", "char", "short", "int", "long", "float", "double", "signed", "unsigned", "const", "volatile", "struct", "union", "enum", NOMBRE_DE_TYPEDEF, ';', ',', '=', '{', ':', ')']
   78 direct_declarator: direct_declarator . '[' constant_expression ']'
   79                  | direct_declarator . '[' ']'
   81                  | direct_declarator . '(' $@5 factorizacion_direct_declarator

    '('  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 74 (declarator)


state 59

   68 factorizacion_enum_specifier: IDENTIFICADOR . '{' enumerator_list '}'
   69                             | IDENTIFICADOR .  ["typedef", "extern", "static", "auto", "register", "void", "char", "short", "int", "long", "float", "double", "signed", "unsigned", "const", "volatile", "struct", "union", "enum", IDENTIFICADOR, NOMBRE_DE_TYPEDEF, ';', ',', ':', '(', ')', '[', '*']

    '{'  shift, and go to state 120

    $default  reduce using rule 69 (factorizacion_enum_specifier)


state 60

   67 factorizacion_enum_specifier: '{' . enumerator_list '}'
   70 enumerator_list: . enumerator
   71                | . enumerator_list ',' enumerator
   72 enumerator: . IDENTIFICADOR
   73           | . IDENTIFICADOR '=' constant_expression

    IDENTIFICADOR  shift, and go to state 121

    enumerator_list  go to state 122
    enumerator       go to state 123


state 61

   66 enum_specifier: "enum" $@4 factorizacion_enum_specifier .

    $default  reduce using rule 66 (enum_specifier)


state 62

   77 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 77 (direct_declarator)


state 63

   91 type_qualifier_list: type_qualifier .

    $default  reduce using rule 91 (type_qualifier_list)


state 64

   89 factorizacion_pointer: pointer .

    $default  reduce using rule 89 (factorizacion_pointer)


state 65

   86 pointer: '*' $@6 factorizacion_pointer .

    $default  reduce using rule 86 (pointer)


state 66

   42 type_qualifier: . "const"
   43               | . "volatile"
   86 pointer: . '*' $@6 factorizacion_pointer
   88 factorizacion_pointer: type_qualifier_list .  [IDENTIFICADOR, ',', '(', ')', '[']
   90                      | type_qualifier_list . pointer
   92 type_qualifier_list: type_qualifier_list . type_qualifier

    "const"     shift, and go to state 15
    "volatile"  shift, and go to state 16
    '*'         shift, and go to state 23

    $default  reduce using rule 88 (factorizacion_pointer)

    type_qualifier  go to state 124
    pointer         go to state 125


state 67

   10 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 10 (declaration)


state 68

   20 init_declarator_list: init_declarator_list ',' . init_declarator
   21                     | init_declarator_list ',' . error
   22 init_declarator: . declarator
   23                | . declarator '=' initializer
   24                | . declarator error
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    error          shift, and go to state 126
    IDENTIFICADOR  shift, and go to state 20
    '('            shift, and go to state 22
    '*'            shift, and go to state 23

    init_declarator    go to state 127
    declarator         go to state 79
    direct_declarator  go to state 36
    pointer            go to state 37


state 69

   24 init_declarator: declarator error .

    $default  reduce using rule 24 (init_declarator)


state 70

   23 init_declarator: declarator '=' . initializer
  102 initializer: . assignment_expression
  103            | . '{' initializer_list '}'
  104            | . '{' initializer_list ',' '}'
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '{'                                  shift, and go to state 128
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    initializer                go to state 129
    assignment_expression      go to state 130
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 71

    5 function_definition: declaration_specifiers declarator declaration_list . compound_statement
    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   12 declaration_list: declaration_list . declaration
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  139 compound_statement: . '{' $@11 factorizacion_compound_statement

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '{'                shift, and go to state 51

    declaration                go to state 77
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    compound_statement         go to state 133


state 72

    6 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 6 (function_definition)


state 73

   49 factorizacion_struct_or_union_specifier: IDENTIFICADOR . '{' $@3 struct_declaration_list '}'
   50                                        | IDENTIFICADOR .  ["typedef", "extern", "static", "auto", "register", "void", "char", "short", "int", "long", "float", "double", "signed", "unsigned", "const", "volatile", "struct", "union", "enum", IDENTIFICADOR, NOMBRE_DE_TYPEDEF, ';', ',', ':', '(', ')', '[', '*']

    '{'  shift, and go to state 134

    $default  reduce using rule 50 (factorizacion_struct_or_union_specifier)


state 74

   46 $@2: .
   47 factorizacion_struct_or_union_specifier: '{' . $@2 struct_declaration_list '}'

    $default  reduce using rule 46 ($@2)

    $@2  go to state 135


state 75

   45 struct_or_union_specifier: struct_or_union $@1 factorizacion_struct_or_union_specifier .

    $default  reduce using rule 45 (struct_or_union_specifier)


state 76

    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   11 declaration_list: . declaration
   12                 | . declaration_list declaration
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  139                   | '{' $@11 . factorizacion_compound_statement
  140 factorizacion_compound_statement: . '}'
  141                                 | . statement_list '}'
  142                                 | . declaration_list '}'
  143                                 | . declaration_list statement_list '}'
  144 statement_list: . statement
  145               | . statement_list statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "typedef"                            shift, and go to state 1
    "extern"                             shift, and go to state 2
    "static"                             shift, and go to state 3
    "auto"                               shift, and go to state 4
    "register"                           shift, and go to state 5
    "void"                               shift, and go to state 6
    "char"                               shift, and go to state 7
    "short"                              shift, and go to state 8
    "int"                                shift, and go to state 9
    "long"                               shift, and go to state 10
    "float"                              shift, and go to state 11
    "double"                             shift, and go to state 12
    "signed"                             shift, and go to state 13
    "unsigned"                           shift, and go to state 14
    "const"                              shift, and go to state 15
    "volatile"                           shift, and go to state 16
    "struct"                             shift, and go to state 17
    "union"                              shift, and go to state 18
    "enum"                               shift, and go to state 19
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 148
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '}'                                  shift, and go to state 150
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    declaration                       go to state 52
    declaration_list                  go to state 151
    declaration_specifiers            go to state 54
    storage_class_specifier           go to state 29
    type_specifier                    go to state 30
    type_qualifier                    go to state 31
    struct_or_union_specifier         go to state 32
    struct_or_union                   go to state 33
    enum_specifier                    go to state 34
    statement                         go to state 152
    labeled_statement                 go to state 153
    expression_statement              go to state 154
    compound_statement                go to state 155
    factorizacion_compound_statement  go to state 156
    statement_list                    go to state 157
    selection_statement               go to state 158
    iteration_statement               go to state 159
    jump_statement                    go to state 160
    expression                        go to state 161
    assignment_expression             go to state 162
    conditional_expression            go to state 131
    logical_or_expression             go to state 103
    logical_and_expression            go to state 104
    inclusive_or_expression           go to state 105
    exclusive_or_expression           go to state 106
    and_expression                    go to state 107
    equality_expression               go to state 108
    relational_expression             go to state 109
    shift_expression                  go to state 110
    additive_expression               go to state 111
    multiplicative_expression         go to state 112
    cast_expression                   go to state 113
    unary_expression                  go to state 132
    unary_operator                    go to state 115
    postfix_expression                go to state 116
    primary_expression                go to state 117
    constante_entera                  go to state 118
    constante_real                    go to state 119


state 77

   12 declaration_list: declaration_list declaration .

    $default  reduce using rule 12 (declaration_list)


state 78

    7 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 7 (function_definition)


state 79

   22 init_declarator: declarator .  [';', ',']
   23                | declarator . '=' initializer
   24                | declarator . error

    error  shift, and go to state 69
    '='    shift, and go to state 70

    ';'  reduce using rule 22 (init_declarator)
    ','  reduce using rule 22 (init_declarator)


state 80

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   81 direct_declarator: direct_declarator '(' $@5 . factorizacion_direct_declarator
   82 factorizacion_direct_declarator: . parameter_type_list ')'
   83                                | . identifier_list ')'
   84                                | . ')'
   93 parameter_type_list: . parameter_list
   94                    | . parameter_list ',' "..."
   95 parameter_list: . parameter_declaration
   96               | . parameter_list ',' parameter_declaration
   97 parameter_declaration: . declaration_specifiers declarator
   98                      | . declaration_specifiers abstract_declarator
   99                      | . declaration_specifiers
  100 identifier_list: . IDENTIFICADOR
  101                | . identifier_list ',' IDENTIFICADOR

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    IDENTIFICADOR      shift, and go to state 163
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    ')'                shift, and go to state 164

    declaration_specifiers           go to state 165
    storage_class_specifier          go to state 29
    type_specifier                   go to state 30
    type_qualifier                   go to state 31
    struct_or_union_specifier        go to state 32
    struct_or_union                  go to state 33
    enum_specifier                   go to state 34
    factorizacion_direct_declarator  go to state 166
    parameter_type_list              go to state 167
    parameter_list                   go to state 168
    parameter_declaration            go to state 169
    identifier_list                  go to state 170


state 81

  269 constante_entera: CONSTANTE_ENTERA_INT_TYPE .

    $default  reduce using rule 269 (constante_entera)


state 82

  270 constante_entera: CONSTANTE_ENTERA_UNSIGNED_INT_TYPE .

    $default  reduce using rule 270 (constante_entera)


state 83

  271 constante_entera: CONSTANTE_ENTERA_LONG_TYPE .

    $default  reduce using rule 271 (constante_entera)


state 84

  272 constante_entera: CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE .

    $default  reduce using rule 272 (constante_entera)


state 85

  273 constante_real: CONSTANTE_REAL_FLOAT_TYPE .

    $default  reduce using rule 273 (constante_real)


state 86

  275 constante_real: CONSTANTE_REAL_LONG_DOUBLE_TYPE .

    $default  reduce using rule 275 (constante_real)


state 87

  274 constante_real: CONSTANTE_REAL_DOUBLE_TYPE .

    $default  reduce using rule 274 (constante_real)


state 88

  266 primary_expression: LITERAL_CADENA .

    $default  reduce using rule 266 (primary_expression)


state 89

  243 $@24: .
  244 unary_expression: "sizeof" . $@24 factorizacion_unary_expression

    $default  reduce using rule 243 ($@24)

    $@24  go to state 171


state 90

  263 primary_expression: IDENTIFICADOR .

    $default  reduce using rule 263 (primary_expression)


state 91

  238 $@22: .
  239 unary_expression: "++" . $@22 unary_expression

    $default  reduce using rule 238 ($@22)

    $@22  go to state 172


state 92

  240 $@23: .
  241 unary_expression: "--" . $@23 unary_expression

    $default  reduce using rule 240 ($@23)

    $@23  go to state 173


state 93

  235 $@21: .  ["void", "char", "short", "int", "long", "float", "double", "signed", "unsigned", "const", "volatile", "struct", "union", "enum", NOMBRE_DE_TYPEDEF]
  236 cast_expression: '(' . $@21 type_name ')' cast_expression
  267 $@25: .  [CONSTANTE_ENTERA_INT_TYPE, CONSTANTE_ENTERA_UNSIGNED_INT_TYPE, CONSTANTE_ENTERA_LONG_TYPE, CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE, CONSTANTE_REAL_FLOAT_TYPE, CONSTANTE_REAL_LONG_DOUBLE_TYPE, CONSTANTE_REAL_DOUBLE_TYPE, LITERAL_CADENA, "sizeof", IDENTIFICADOR, "++", "--", '(', '*', '&', '+', '-', '~', '!']
  268 primary_expression: '(' . $@25 expression ')'

    "void"             reduce using rule 235 ($@21)
    "char"             reduce using rule 235 ($@21)
    "short"            reduce using rule 235 ($@21)
    "int"              reduce using rule 235 ($@21)
    "long"             reduce using rule 235 ($@21)
    "float"            reduce using rule 235 ($@21)
    "double"           reduce using rule 235 ($@21)
    "signed"           reduce using rule 235 ($@21)
    "unsigned"         reduce using rule 235 ($@21)
    "const"            reduce using rule 235 ($@21)
    "volatile"         reduce using rule 235 ($@21)
    "struct"           reduce using rule 235 ($@21)
    "union"            reduce using rule 235 ($@21)
    "enum"             reduce using rule 235 ($@21)
    NOMBRE_DE_TYPEDEF  reduce using rule 235 ($@21)
    $default           reduce using rule 267 ($@25)

    $@21  go to state 174
    $@25  go to state 175


state 94

   79 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 79 (direct_declarator)


state 95

  248 unary_operator: '*' .

    $default  reduce using rule 248 (unary_operator)


state 96

  247 unary_operator: '&' .

    $default  reduce using rule 247 (unary_operator)


state 97

  249 unary_operator: '+' .

    $default  reduce using rule 249 (unary_operator)


state 98

  250 unary_operator: '-' .

    $default  reduce using rule 250 (unary_operator)


state 99

  251 unary_operator: '~' .

    $default  reduce using rule 251 (unary_operator)


state 100

  252 unary_operator: '!' .

    $default  reduce using rule 252 (unary_operator)


state 101

   78 direct_declarator: direct_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 176


state 102

  187 constant_expression: conditional_expression .

    $default  reduce using rule 187 (constant_expression)


state 103

  188 conditional_expression: logical_or_expression .  [';', ',', '}', ':', ')', ']']
  189                       | logical_or_expression . '?' expression ':' conditional_expression
  190                       | logical_or_expression . '?' error ':' conditional_expression
  191                       | logical_or_expression . '?' expression ':' error
  193 logical_or_expression: logical_or_expression . "||" logical_and_expression
  194                      | logical_or_expression . "||" error

    "||"  shift, and go to state 177
    '?'   shift, and go to state 178

    $default  reduce using rule 188 (conditional_expression)


state 104

  192 logical_or_expression: logical_and_expression .  ["||", ';', ',', '}', ':', ')', ']', '?']
  196 logical_and_expression: logical_and_expression . "&&" inclusive_or_expression
  197                       | logical_and_expression . "&&" error

    "&&"  shift, and go to state 179

    $default  reduce using rule 192 (logical_or_expression)


state 105

  195 logical_and_expression: inclusive_or_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?']
  199 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 180

    $default  reduce using rule 195 (logical_and_expression)


state 106

  198 inclusive_or_expression: exclusive_or_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?', '|']
  201 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 181

    $default  reduce using rule 198 (inclusive_or_expression)


state 107

  200 exclusive_or_expression: and_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?', '|', '^']
  203 and_expression: and_expression . '&' equality_expression
  204               | and_expression . '&' error

    '&'  shift, and go to state 182

    $default  reduce using rule 200 (exclusive_or_expression)


state 108

  202 and_expression: equality_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&']
  206 equality_expression: equality_expression . "==" relational_expression
  207                    | equality_expression . "==" error
  208                    | equality_expression . "!=" relational_expression
  209                    | equality_expression . "!=" error

    "=="  shift, and go to state 183
    "!="  shift, and go to state 184

    $default  reduce using rule 202 (and_expression)


state 109

  205 equality_expression: relational_expression .  ["||", "&&", "==", "!=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&']
  211 relational_expression: relational_expression . '<' shift_expression
  212                      | relational_expression . '<' error
  213                      | relational_expression . '>' shift_expression
  214                      | relational_expression . '>' error
  215                      | relational_expression . "<=" shift_expression
  216                      | relational_expression . "<=" error
  217                      | relational_expression . ">=" shift_expression
  218                      | relational_expression . ">=" error

    ">="  shift, and go to state 185
    "<="  shift, and go to state 186
    '<'   shift, and go to state 187
    '>'   shift, and go to state 188

    $default  reduce using rule 205 (equality_expression)


state 110

  210 relational_expression: shift_expression .  ["||", "&&", "==", "!=", ">=", "<=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  220 shift_expression: shift_expression . "<<" additive_expression
  221                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 189
    ">>"  shift, and go to state 190

    $default  reduce using rule 210 (relational_expression)


state 111

  219 shift_expression: additive_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  223 additive_expression: additive_expression . '+' multiplicative_expression
  224                    | additive_expression . '+' error
  225                    | additive_expression . '-' multiplicative_expression
  226                    | additive_expression . '-' error

    '+'  shift, and go to state 191
    '-'  shift, and go to state 192

    $default  reduce using rule 219 (shift_expression)


state 112

  222 additive_expression: multiplicative_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>', '+', '-']
  228 multiplicative_expression: multiplicative_expression . '*' cast_expression
  229                          | multiplicative_expression . '*' error
  230                          | multiplicative_expression . '/' cast_expression
  231                          | multiplicative_expression . '/' error
  232                          | multiplicative_expression . '%' cast_expression
  233                          | multiplicative_expression . '%' error

    '*'  shift, and go to state 193
    '/'  shift, and go to state 194
    '%'  shift, and go to state 195

    $default  reduce using rule 222 (additive_expression)


state 113

  227 multiplicative_expression: cast_expression .

    $default  reduce using rule 227 (multiplicative_expression)


state 114

  234 cast_expression: unary_expression .

    $default  reduce using rule 234 (cast_expression)


state 115

  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  242                 | unary_operator . cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    cast_expression     go to state 196
    unary_expression    go to state 114
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 116

  237 unary_expression: postfix_expression .  ["+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>=", "||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '=', '}', ':', ')', ']', '*', '?', '|', '^', '&', '<', '>', '+', '-', '/', '%']
  254 postfix_expression: postfix_expression . '[' expression ']'
  255                   | postfix_expression . '(' ')'
  256                   | postfix_expression . '(' argument_expression_list ')'
  257                   | postfix_expression . '.' IDENTIFICADOR
  258                   | postfix_expression . "->" IDENTIFICADOR
  259                   | postfix_expression . "++"
  260                   | postfix_expression . "--"

    "->"  shift, and go to state 197
    "++"  shift, and go to state 198
    "--"  shift, and go to state 199
    '('   shift, and go to state 200
    '['   shift, and go to state 201
    '.'   shift, and go to state 202

    $default  reduce using rule 237 (unary_expression)


state 117

  253 postfix_expression: primary_expression .

    $default  reduce using rule 253 (postfix_expression)


state 118

  264 primary_expression: constante_entera .

    $default  reduce using rule 264 (primary_expression)


state 119

  265 primary_expression: constante_real .

    $default  reduce using rule 265 (primary_expression)


state 120

   68 factorizacion_enum_specifier: IDENTIFICADOR '{' . enumerator_list '}'
   70 enumerator_list: . enumerator
   71                | . enumerator_list ',' enumerator
   72 enumerator: . IDENTIFICADOR
   73           | . IDENTIFICADOR '=' constant_expression

    IDENTIFICADOR  shift, and go to state 121

    enumerator_list  go to state 203
    enumerator       go to state 123


state 121

   72 enumerator: IDENTIFICADOR .  [',', '}']
   73           | IDENTIFICADOR . '=' constant_expression

    '='  shift, and go to state 204

    $default  reduce using rule 72 (enumerator)


state 122

   67 factorizacion_enum_specifier: '{' enumerator_list . '}'
   71 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 205
    '}'  shift, and go to state 206


state 123

   70 enumerator_list: enumerator .

    $default  reduce using rule 70 (enumerator_list)


state 124

   92 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 92 (type_qualifier_list)


state 125

   90 factorizacion_pointer: type_qualifier_list pointer .

    $default  reduce using rule 90 (factorizacion_pointer)


state 126

   21 init_declarator_list: init_declarator_list ',' error .

    $default  reduce using rule 21 (init_declarator_list)


state 127

   20 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 20 (init_declarator_list)


state 128

  102 initializer: . assignment_expression
  103            | . '{' initializer_list '}'
  103            | '{' . initializer_list '}'
  104            | . '{' initializer_list ',' '}'
  104            | '{' . initializer_list ',' '}'
  105 initializer_list: . initializer
  106                 | . initializer_list ',' initializer
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '{'                                  shift, and go to state 128
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    initializer                go to state 207
    initializer_list           go to state 208
    assignment_expression      go to state 130
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 129

   23 init_declarator: declarator '=' initializer .

    $default  reduce using rule 23 (init_declarator)


state 130

  102 initializer: assignment_expression .

    $default  reduce using rule 102 (initializer)


state 131

  174 assignment_expression: conditional_expression .

    $default  reduce using rule 174 (assignment_expression)


state 132

  175 assignment_expression: unary_expression . assignment_operator assignment_expression
  176 assignment_operator: . '='
  177                    | . "*="
  178                    | . "/="
  179                    | . "%="
  180                    | . "+="
  181                    | . "-="
  182                    | . "<<="
  183                    | . ">>="
  184                    | . "&="
  185                    | . "^="
  186                    | . "|="
  234 cast_expression: unary_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '*', '?', '|', '^', '&', '<', '>', '+', '-', '/', '%']

    "+="   shift, and go to state 209
    "-="   shift, and go to state 210
    "*="   shift, and go to state 211
    "/="   shift, and go to state 212
    "%="   shift, and go to state 213
    "&="   shift, and go to state 214
    "|="   shift, and go to state 215
    "^="   shift, and go to state 216
    "<<="  shift, and go to state 217
    ">>="  shift, and go to state 218
    '='    shift, and go to state 219

    $default  reduce using rule 234 (cast_expression)

    assignment_operator  go to state 220


state 133

    5 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 5 (function_definition)


state 134

   48 $@3: .
   49 factorizacion_struct_or_union_specifier: IDENTIFICADOR '{' . $@3 struct_declaration_list '}'

    $default  reduce using rule 48 ($@3)

    $@3  go to state 221


state 135

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   47 factorizacion_struct_or_union_specifier: '{' $@2 . struct_declaration_list '}'
   51 struct_or_union: . "struct"
   52                | . "union"
   53 struct_declaration_list: . struct_declaration
   54                        | . struct_declaration_list struct_declaration
   55 struct_declaration: . specifier_qualifier_list struct_declarator_list ';'
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 224
    struct_declaration         go to state 225
    specifier_qualifier_list   go to state 226
    enum_specifier             go to state 34


state 136

  146 $@12: .
  147 selection_statement: "if" . $@12 factorizacion_selection_statement

    $default  reduce using rule 146 ($@12)

    $@12  go to state 227


state 137

  148 $@13: .
  149 selection_statement: "switch" . $@13 '(' expression ')' statement

    $default  reduce using rule 148 ($@13)

    $@13  go to state 228


state 138

  153 $@14: .
  154 iteration_statement: "while" . $@14 '(' expression ')' statement

    $default  reduce using rule 153 ($@14)

    $@14  go to state 229


state 139

  155 $@15: .
  156 iteration_statement: "do" . $@15 statement "while" '(' expression ')' ';'

    $default  reduce using rule 155 ($@15)

    $@15  go to state 230


state 140

  157 $@16: .
  158 iteration_statement: "for" . $@16 factorizacion_iteration_statement

    $default  reduce using rule 157 ($@16)

    $@16  go to state 231


state 141

  131 $@9: .  [CONSTANTE_ENTERA_INT_TYPE, CONSTANTE_ENTERA_UNSIGNED_INT_TYPE, CONSTANTE_ENTERA_LONG_TYPE, CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE, CONSTANTE_REAL_FLOAT_TYPE, CONSTANTE_REAL_LONG_DOUBLE_TYPE, CONSTANTE_REAL_DOUBLE_TYPE, LITERAL_CADENA, "sizeof", IDENTIFICADOR, "++", "--", '(', '*', '&', '+', '-', '~', '!']
  132 labeled_statement: "case" . $@9 constant_expression ':' statement
  133                  | "case" . error

    error  shift, and go to state 232

    CONSTANTE_ENTERA_INT_TYPE            reduce using rule 131 ($@9)
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   reduce using rule 131 ($@9)
    CONSTANTE_ENTERA_LONG_TYPE           reduce using rule 131 ($@9)
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  reduce using rule 131 ($@9)
    CONSTANTE_REAL_FLOAT_TYPE            reduce using rule 131 ($@9)
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      reduce using rule 131 ($@9)
    CONSTANTE_REAL_DOUBLE_TYPE           reduce using rule 131 ($@9)
    LITERAL_CADENA                       reduce using rule 131 ($@9)
    "sizeof"                             reduce using rule 131 ($@9)
    IDENTIFICADOR                        reduce using rule 131 ($@9)
    "++"                                 reduce using rule 131 ($@9)
    "--"                                 reduce using rule 131 ($@9)
    '('                                  reduce using rule 131 ($@9)
    '*'                                  reduce using rule 131 ($@9)
    '&'                                  reduce using rule 131 ($@9)
    '+'                                  reduce using rule 131 ($@9)
    '-'                                  reduce using rule 131 ($@9)
    '~'                                  reduce using rule 131 ($@9)
    '!'                                  reduce using rule 131 ($@9)

    $@9  go to state 233


state 142

  134 $@10: .
  135 labeled_statement: "default" . $@10 ':' statement

    $default  reduce using rule 134 ($@10)

    $@10  go to state 234


state 143

  161 $@17: .
  162 jump_statement: "goto" . $@17 IDENTIFICADOR ';'

    $default  reduce using rule 161 ($@17)

    $@17  go to state 235


state 144

  163 $@18: .
  164 jump_statement: "continue" . $@18 ';'

    $default  reduce using rule 163 ($@18)

    $@18  go to state 236


state 145

  165 $@19: .
  166 jump_statement: "break" . $@19 ';'

    $default  reduce using rule 165 ($@19)

    $@19  go to state 237


state 146

  167 $@20: .
  168 jump_statement: "return" . $@20 factorizacion_jump_statement

    $default  reduce using rule 167 ($@20)

    $@20  go to state 238


state 147

  127 $@7: .  [':']
  128 labeled_statement: IDENTIFICADOR . $@7 ':' statement
  263 primary_expression: IDENTIFICADOR .  ["+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>=", "||", "&&", "==", "!=", ">=", "<=", "<<", ">>", "->", "++", "--", ';', ',', '=', '(', '[', '*', '?', '|', '^', '&', '<', '>', '+', '-', '/', '%', '.']

    ':'       reduce using rule 127 ($@7)
    $default  reduce using rule 263 (primary_expression)

    $@7  go to state 239


state 148

   41 type_specifier: NOMBRE_DE_TYPEDEF .  ["typedef", "extern", "static", "auto", "register", "void", "char", "short", "int", "long", "float", "double", "signed", "unsigned", "const", "volatile", "struct", "union", "enum", IDENTIFICADOR, NOMBRE_DE_TYPEDEF, ';', '(', '*']
  129 $@8: .  [':']
  130 labeled_statement: NOMBRE_DE_TYPEDEF . $@8 ':' statement

    ':'       reduce using rule 129 ($@8)
    $default  reduce using rule 41 (type_specifier)

    $@8  go to state 240


state 149

  136 expression_statement: ';' .

    $default  reduce using rule 136 (expression_statement)


state 150

  140 factorizacion_compound_statement: '}' .

    $default  reduce using rule 140 (factorizacion_compound_statement)


state 151

    9 declaration: . declaration_specifiers ';'
   10            | . declaration_specifiers init_declarator_list ';'
   12 declaration_list: declaration_list . declaration
   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  142 factorizacion_compound_statement: declaration_list . '}'
  143                                 | declaration_list . statement_list '}'
  144 statement_list: . statement
  145               | . statement_list statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "typedef"                            shift, and go to state 1
    "extern"                             shift, and go to state 2
    "static"                             shift, and go to state 3
    "auto"                               shift, and go to state 4
    "register"                           shift, and go to state 5
    "void"                               shift, and go to state 6
    "char"                               shift, and go to state 7
    "short"                              shift, and go to state 8
    "int"                                shift, and go to state 9
    "long"                               shift, and go to state 10
    "float"                              shift, and go to state 11
    "double"                             shift, and go to state 12
    "signed"                             shift, and go to state 13
    "unsigned"                           shift, and go to state 14
    "const"                              shift, and go to state 15
    "volatile"                           shift, and go to state 16
    "struct"                             shift, and go to state 17
    "union"                              shift, and go to state 18
    "enum"                               shift, and go to state 19
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 148
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '}'                                  shift, and go to state 241
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    declaration                go to state 77
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    statement                  go to state 152
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    statement_list             go to state 242
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 152

  144 statement_list: statement .

    $default  reduce using rule 144 (statement_list)


state 153

  121 statement: labeled_statement .

    $default  reduce using rule 121 (statement)


state 154

  122 statement: expression_statement .

    $default  reduce using rule 122 (statement)


state 155

  123 statement: compound_statement .

    $default  reduce using rule 123 (statement)


state 156

  139 compound_statement: '{' $@11 factorizacion_compound_statement .

    $default  reduce using rule 139 (compound_statement)


state 157

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  141 factorizacion_compound_statement: statement_list . '}'
  145 statement_list: statement_list . statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '}'                                  shift, and go to state 244
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 245
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 158

  124 statement: selection_statement .

    $default  reduce using rule 124 (statement)


state 159

  125 statement: iteration_statement .

    $default  reduce using rule 125 (statement)


state 160

  126 statement: jump_statement .

    $default  reduce using rule 126 (statement)


state 161

  137 expression_statement: expression . ';'
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ';'  shift, and go to state 246
    ','  shift, and go to state 247


state 162

  171 expression: assignment_expression .

    $default  reduce using rule 171 (expression)


state 163

  100 identifier_list: IDENTIFICADOR .

    $default  reduce using rule 100 (identifier_list)


state 164

   84 factorizacion_direct_declarator: ')' .

    $default  reduce using rule 84 (factorizacion_direct_declarator)


state 165

   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer
   97 parameter_declaration: declaration_specifiers . declarator
   98                      | declaration_specifiers . abstract_declarator
   99                      | declaration_specifiers .  [',', ')']
  109 abstract_declarator: . pointer
  110                    | . direct_abstract_declarator
  111                    | . pointer direct_abstract_declarator
  112 direct_abstract_declarator: . '(' abstract_declarator ')'
  113                           | . '[' ']'
  114                           | . '[' constant_expression ']'
  115                           | . direct_abstract_declarator '[' ']'
  116                           | . direct_abstract_declarator '[' constant_expression ']'
  117                           | . '(' ')'
  118                           | . '(' parameter_type_list ')'
  119                           | . direct_abstract_declarator '(' ')'
  120                           | . direct_abstract_declarator '(' parameter_type_list ')'

    IDENTIFICADOR  shift, and go to state 20
    '('            shift, and go to state 248
    '['            shift, and go to state 249
    '*'            shift, and go to state 23

    $default  reduce using rule 99 (parameter_declaration)

    declarator                  go to state 250
    direct_declarator           go to state 36
    pointer                     go to state 251
    abstract_declarator         go to state 252
    direct_abstract_declarator  go to state 253


state 166

   81 direct_declarator: direct_declarator '(' $@5 factorizacion_direct_declarator .

    $default  reduce using rule 81 (direct_declarator)


state 167

   82 factorizacion_direct_declarator: parameter_type_list . ')'

    ')'  shift, and go to state 254


state 168

   93 parameter_type_list: parameter_list .  [')']
   94                    | parameter_list . ',' "..."
   96 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 255

    $default  reduce using rule 93 (parameter_type_list)


state 169

   95 parameter_list: parameter_declaration .

    $default  reduce using rule 95 (parameter_list)


state 170

   83 factorizacion_direct_declarator: identifier_list . ')'
  101 identifier_list: identifier_list . ',' IDENTIFICADOR

    ','  shift, and go to state 256
    ')'  shift, and go to state 257


state 171

  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  244                 | "sizeof" $@24 . factorizacion_unary_expression
  245 factorizacion_unary_expression: . unary_expression
  246                               | . '(' type_name ')'
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 258
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    unary_expression                go to state 259
    factorizacion_unary_expression  go to state 260
    unary_operator                  go to state 115
    postfix_expression              go to state 116
    primary_expression              go to state 117
    constante_entera                go to state 118
    constante_real                  go to state 119


state 172

  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  239                 | "++" $@22 . unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 261
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    unary_expression    go to state 262
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 173

  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  241                 | "--" $@23 . unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 261
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    unary_expression    go to state 263
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 174

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  107 type_name: . specifier_qualifier_list
  108          | . specifier_qualifier_list abstract_declarator
  236 cast_expression: '(' $@21 . type_name ')' cast_expression

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 264
    enum_specifier             go to state 34
    type_name                  go to state 265


state 175

  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  268                   | '(' $@25 . expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 266
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 176

   78 direct_declarator: direct_declarator '[' constant_expression ']' .

    $default  reduce using rule 78 (direct_declarator)


state 177

  193 logical_or_expression: logical_or_expression "||" . logical_and_expression
  194                      | logical_or_expression "||" . error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 267
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    logical_and_expression     go to state 268
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 178

  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  189                       | logical_or_expression '?' . expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  190                       | logical_or_expression '?' . error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  191                       | logical_or_expression '?' . expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 269
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 270
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 179

  196 logical_and_expression: logical_and_expression "&&" . inclusive_or_expression
  197                       | logical_and_expression "&&" . error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 271
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    inclusive_or_expression    go to state 272
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 180

  199 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    exclusive_or_expression    go to state 273
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 181

  201 exclusive_or_expression: exclusive_or_expression '^' . and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    and_expression             go to state 274
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 182

  203 and_expression: and_expression '&' . equality_expression
  204               | and_expression '&' . error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 275
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    equality_expression        go to state 276
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 183

  206 equality_expression: equality_expression "==" . relational_expression
  207                    | equality_expression "==" . error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 277
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    relational_expression      go to state 278
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 184

  208 equality_expression: equality_expression "!=" . relational_expression
  209                    | equality_expression "!=" . error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 279
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    relational_expression      go to state 280
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 185

  217 relational_expression: relational_expression ">=" . shift_expression
  218                      | relational_expression ">=" . error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 281
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    shift_expression           go to state 282
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 186

  215 relational_expression: relational_expression "<=" . shift_expression
  216                      | relational_expression "<=" . error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 283
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    shift_expression           go to state 284
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 187

  211 relational_expression: relational_expression '<' . shift_expression
  212                      | relational_expression '<' . error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 285
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    shift_expression           go to state 286
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 188

  213 relational_expression: relational_expression '>' . shift_expression
  214                      | relational_expression '>' . error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 287
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    shift_expression           go to state 288
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 189

  220 shift_expression: shift_expression "<<" . additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    additive_expression        go to state 289
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 190

  221 shift_expression: shift_expression ">>" . additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    additive_expression        go to state 290
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 191

  223 additive_expression: additive_expression '+' . multiplicative_expression
  224                    | additive_expression '+' . error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 291
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    multiplicative_expression  go to state 292
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 192

  225 additive_expression: additive_expression '-' . multiplicative_expression
  226                    | additive_expression '-' . error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 293
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    multiplicative_expression  go to state 294
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 193

  228 multiplicative_expression: multiplicative_expression '*' . cast_expression
  229                          | multiplicative_expression '*' . error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 295
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    cast_expression     go to state 296
    unary_expression    go to state 114
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 194

  230 multiplicative_expression: multiplicative_expression '/' . cast_expression
  231                          | multiplicative_expression '/' . error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 297
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    cast_expression     go to state 298
    unary_expression    go to state 114
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 195

  232 multiplicative_expression: multiplicative_expression '%' . cast_expression
  233                          | multiplicative_expression '%' . error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 299
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    cast_expression     go to state 300
    unary_expression    go to state 114
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 196

  242 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 242 (unary_expression)


state 197

  258 postfix_expression: postfix_expression "->" . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 301


state 198

  259 postfix_expression: postfix_expression "++" .

    $default  reduce using rule 259 (postfix_expression)


state 199

  260 postfix_expression: postfix_expression "--" .

    $default  reduce using rule 260 (postfix_expression)


state 200

  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  255                   | postfix_expression '(' . ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  256                   | postfix_expression '(' . argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  261 argument_expression_list: . assignment_expression
  262                         | . argument_expression_list ',' assignment_expression
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    ')'                                  shift, and go to state 302
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    assignment_expression      go to state 303
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    argument_expression_list   go to state 304
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 201

  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  254                   | postfix_expression '[' . expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 305
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 202

  257 postfix_expression: postfix_expression '.' . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 306


state 203

   68 factorizacion_enum_specifier: IDENTIFICADOR '{' enumerator_list . '}'
   71 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 205
    '}'  shift, and go to state 307


state 204

   73 enumerator: IDENTIFICADOR '=' . constant_expression
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 308
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 205

   71 enumerator_list: enumerator_list ',' . enumerator
   72 enumerator: . IDENTIFICADOR
   73           | . IDENTIFICADOR '=' constant_expression

    IDENTIFICADOR  shift, and go to state 121

    enumerator  go to state 309


state 206

   67 factorizacion_enum_specifier: '{' enumerator_list '}' .

    $default  reduce using rule 67 (factorizacion_enum_specifier)


state 207

  105 initializer_list: initializer .

    $default  reduce using rule 105 (initializer_list)


state 208

  103 initializer: '{' initializer_list . '}'
  104            | '{' initializer_list . ',' '}'
  106 initializer_list: initializer_list . ',' initializer

    ','  shift, and go to state 310
    '}'  shift, and go to state 311


state 209

  180 assignment_operator: "+=" .

    $default  reduce using rule 180 (assignment_operator)


state 210

  181 assignment_operator: "-=" .

    $default  reduce using rule 181 (assignment_operator)


state 211

  177 assignment_operator: "*=" .

    $default  reduce using rule 177 (assignment_operator)


state 212

  178 assignment_operator: "/=" .

    $default  reduce using rule 178 (assignment_operator)


state 213

  179 assignment_operator: "%=" .

    $default  reduce using rule 179 (assignment_operator)


state 214

  184 assignment_operator: "&=" .

    $default  reduce using rule 184 (assignment_operator)


state 215

  186 assignment_operator: "|=" .

    $default  reduce using rule 186 (assignment_operator)


state 216

  185 assignment_operator: "^=" .

    $default  reduce using rule 185 (assignment_operator)


state 217

  182 assignment_operator: "<<=" .

    $default  reduce using rule 182 (assignment_operator)


state 218

  183 assignment_operator: ">>=" .

    $default  reduce using rule 183 (assignment_operator)


state 219

  176 assignment_operator: '=' .

    $default  reduce using rule 176 (assignment_operator)


state 220

  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  175                      | unary_expression assignment_operator . assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    assignment_expression      go to state 312
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 221

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   49 factorizacion_struct_or_union_specifier: IDENTIFICADOR '{' $@3 . struct_declaration_list '}'
   51 struct_or_union: . "struct"
   52                | . "union"
   53 struct_declaration_list: . struct_declaration
   54                        | . struct_declaration_list struct_declaration
   55 struct_declaration: . specifier_qualifier_list struct_declarator_list ';'
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 313
    struct_declaration         go to state 225
    specifier_qualifier_list   go to state 226
    enum_specifier             go to state 34


state 222

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   56 specifier_qualifier_list: . type_specifier
   56                         | type_specifier .  [IDENTIFICADOR, ':', '(', ')', '[', '*']
   57                         | . type_specifier specifier_qualifier_list
   57                         | type_specifier . specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    $default  reduce using rule 56 (specifier_qualifier_list)

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 314
    enum_specifier             go to state 34


state 223

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   58                         | type_qualifier .  [IDENTIFICADOR, ':', '(', ')', '[', '*']
   59                         | . type_qualifier specifier_qualifier_list
   59                         | type_qualifier . specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    $default  reduce using rule 58 (specifier_qualifier_list)

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 315
    enum_specifier             go to state 34


state 224

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   47 factorizacion_struct_or_union_specifier: '{' $@2 struct_declaration_list . '}'
   51 struct_or_union: . "struct"
   52                | . "union"
   54 struct_declaration_list: struct_declaration_list . struct_declaration
   55 struct_declaration: . specifier_qualifier_list struct_declarator_list ';'
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '}'                shift, and go to state 316

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 317
    specifier_qualifier_list   go to state 226
    enum_specifier             go to state 34


state 225

   53 struct_declaration_list: struct_declaration .

    $default  reduce using rule 53 (struct_declaration_list)


state 226

   55 struct_declaration: specifier_qualifier_list . struct_declarator_list ';'
   60 struct_declarator_list: . struct_declarator
   61                       | . struct_declarator_list ',' struct_declarator
   62 struct_declarator: . declarator
   63                  | . ':' constant_expression
   64                  | . declarator ':' constant_expression
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    IDENTIFICADOR  shift, and go to state 20
    ':'            shift, and go to state 318
    '('            shift, and go to state 22
    '*'            shift, and go to state 23

    struct_declarator_list  go to state 319
    struct_declarator       go to state 320
    declarator              go to state 321
    direct_declarator       go to state 36
    pointer                 go to state 37


state 227

  147 selection_statement: "if" $@12 . factorizacion_selection_statement
  150 factorizacion_selection_statement: . '(' expression ')' statement
  151                                  | . '(' expression ')' statement "else" statement
  152                                  | . '(' error

    '('  shift, and go to state 322

    factorizacion_selection_statement  go to state 323


state 228

  149 selection_statement: "switch" $@13 . '(' expression ')' statement

    '('  shift, and go to state 324


state 229

  154 iteration_statement: "while" $@14 . '(' expression ')' statement

    '('  shift, and go to state 325


state 230

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  156                    | "do" $@15 . statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 326
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 231

  158 iteration_statement: "for" $@16 . factorizacion_iteration_statement
  159 factorizacion_iteration_statement: . '(' expression_statement expression_statement ')' statement
  160                                  | . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 327

    factorizacion_iteration_statement  go to state 328


state 232

  133 labeled_statement: "case" error .

    $default  reduce using rule 133 (labeled_statement)


state 233

  132 labeled_statement: "case" $@9 . constant_expression ':' statement
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 329
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 234

  135 labeled_statement: "default" $@10 . ':' statement

    ':'  shift, and go to state 330


state 235

  162 jump_statement: "goto" $@17 . IDENTIFICADOR ';'

    IDENTIFICADOR  shift, and go to state 331


state 236

  164 jump_statement: "continue" $@18 . ';'

    ';'  shift, and go to state 332


state 237

  166 jump_statement: "break" $@19 . ';'

    ';'  shift, and go to state 333


state 238

  168 jump_statement: "return" $@20 . factorizacion_jump_statement
  169 factorizacion_jump_statement: . ';'
  170                             | . expression ';'
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 334
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    factorizacion_jump_statement  go to state 335
    expression                    go to state 336
    assignment_expression         go to state 162
    conditional_expression        go to state 131
    logical_or_expression         go to state 103
    logical_and_expression        go to state 104
    inclusive_or_expression       go to state 105
    exclusive_or_expression       go to state 106
    and_expression                go to state 107
    equality_expression           go to state 108
    relational_expression         go to state 109
    shift_expression              go to state 110
    additive_expression           go to state 111
    multiplicative_expression     go to state 112
    cast_expression               go to state 113
    unary_expression              go to state 132
    unary_operator                go to state 115
    postfix_expression            go to state 116
    primary_expression            go to state 117
    constante_entera              go to state 118
    constante_real                go to state 119


state 239

  128 labeled_statement: IDENTIFICADOR $@7 . ':' statement

    ':'  shift, and go to state 337


state 240

  130 labeled_statement: NOMBRE_DE_TYPEDEF $@8 . ':' statement

    ':'  shift, and go to state 338


state 241

  142 factorizacion_compound_statement: declaration_list '}' .

    $default  reduce using rule 142 (factorizacion_compound_statement)


state 242

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  143 factorizacion_compound_statement: declaration_list statement_list . '}'
  145 statement_list: statement_list . statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '}'                                  shift, and go to state 339
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 245
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 243

  129 $@8: .
  130 labeled_statement: NOMBRE_DE_TYPEDEF . $@8 ':' statement

    $default  reduce using rule 129 ($@8)

    $@8  go to state 240


state 244

  141 factorizacion_compound_statement: statement_list '}' .

    $default  reduce using rule 141 (factorizacion_compound_statement)


state 245

  145 statement_list: statement_list statement .

    $default  reduce using rule 145 (statement_list)


state 246

  137 expression_statement: expression ';' .

    $default  reduce using rule 137 (expression_statement)


state 247

  172 expression: expression ',' . assignment_expression
  173           | expression ',' . error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 340
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    assignment_expression      go to state 341
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 248

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   77                  | '(' . declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer
   93 parameter_type_list: . parameter_list
   94                    | . parameter_list ',' "..."
   95 parameter_list: . parameter_declaration
   96               | . parameter_list ',' parameter_declaration
   97 parameter_declaration: . declaration_specifiers declarator
   98                      | . declaration_specifiers abstract_declarator
   99                      | . declaration_specifiers
  109 abstract_declarator: . pointer
  110                    | . direct_abstract_declarator
  111                    | . pointer direct_abstract_declarator
  112 direct_abstract_declarator: . '(' abstract_declarator ')'
  112                           | '(' . abstract_declarator ')'
  113                           | . '[' ']'
  114                           | . '[' constant_expression ']'
  115                           | . direct_abstract_declarator '[' ']'
  116                           | . direct_abstract_declarator '[' constant_expression ']'
  117                           | . '(' ')'
  117                           | '(' . ')'
  118                           | . '(' parameter_type_list ')'
  118                           | '(' . parameter_type_list ')'
  119                           | . direct_abstract_declarator '(' ')'
  120                           | . direct_abstract_declarator '(' parameter_type_list ')'

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    IDENTIFICADOR      shift, and go to state 20
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '('                shift, and go to state 248
    ')'                shift, and go to state 342
    '['                shift, and go to state 249
    '*'                shift, and go to state 23

    declaration_specifiers      go to state 165
    storage_class_specifier     go to state 29
    type_specifier              go to state 30
    type_qualifier              go to state 31
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    declarator                  go to state 39
    direct_declarator           go to state 36
    pointer                     go to state 251
    parameter_type_list         go to state 343
    parameter_list              go to state 168
    parameter_declaration       go to state 169
    abstract_declarator         go to state 344
    direct_abstract_declarator  go to state 253


state 249

  113 direct_abstract_declarator: '[' . ']'
  114                           | '[' . constant_expression ']'
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    ']'                                  shift, and go to state 345
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 346
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 250

   97 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 97 (parameter_declaration)


state 251

   74 declarator: pointer . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
  109 abstract_declarator: pointer .  [',', ')']
  111                    | pointer . direct_abstract_declarator
  112 direct_abstract_declarator: . '(' abstract_declarator ')'
  113                           | . '[' ']'
  114                           | . '[' constant_expression ']'
  115                           | . direct_abstract_declarator '[' ']'
  116                           | . direct_abstract_declarator '[' constant_expression ']'
  117                           | . '(' ')'
  118                           | . '(' parameter_type_list ')'
  119                           | . direct_abstract_declarator '(' ')'
  120                           | . direct_abstract_declarator '(' parameter_type_list ')'

    IDENTIFICADOR  shift, and go to state 20
    '('            shift, and go to state 248
    '['            shift, and go to state 249

    $default  reduce using rule 109 (abstract_declarator)

    direct_declarator           go to state 58
    direct_abstract_declarator  go to state 347


state 252

   98 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 98 (parameter_declaration)


state 253

  110 abstract_declarator: direct_abstract_declarator .  [',', ')']
  115 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  116                           | direct_abstract_declarator . '[' constant_expression ']'
  119                           | direct_abstract_declarator . '(' ')'
  120                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 348
    '['  shift, and go to state 349

    $default  reduce using rule 110 (abstract_declarator)


state 254

   82 factorizacion_direct_declarator: parameter_type_list ')' .

    $default  reduce using rule 82 (factorizacion_direct_declarator)


state 255

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   94 parameter_type_list: parameter_list ',' . "..."
   96 parameter_list: parameter_list ',' . parameter_declaration
   97 parameter_declaration: . declaration_specifiers declarator
   98                      | . declaration_specifiers abstract_declarator
   99                      | . declaration_specifiers

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    "..."              shift, and go to state 350

    declaration_specifiers     go to state 165
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_declaration      go to state 351


state 256

  101 identifier_list: identifier_list ',' . IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 352


state 257

   83 factorizacion_direct_declarator: identifier_list ')' .

    $default  reduce using rule 83 (factorizacion_direct_declarator)


state 258

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
  107 type_name: . specifier_qualifier_list
  108          | . specifier_qualifier_list abstract_declarator
  246 factorizacion_unary_expression: '(' . type_name ')'
  267 $@25: .  [CONSTANTE_ENTERA_INT_TYPE, CONSTANTE_ENTERA_UNSIGNED_INT_TYPE, CONSTANTE_ENTERA_LONG_TYPE, CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE, CONSTANTE_REAL_FLOAT_TYPE, CONSTANTE_REAL_LONG_DOUBLE_TYPE, CONSTANTE_REAL_DOUBLE_TYPE, LITERAL_CADENA, "sizeof", IDENTIFICADOR, "++", "--", '(', '*', '&', '+', '-', '~', '!']
  268 primary_expression: '(' . $@25 expression ')'

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21

    $default  reduce using rule 267 ($@25)

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 264
    enum_specifier             go to state 34
    type_name                  go to state 353
    $@25                       go to state 175


state 259

  245 factorizacion_unary_expression: unary_expression .

    $default  reduce using rule 245 (factorizacion_unary_expression)


state 260

  244 unary_expression: "sizeof" $@24 factorizacion_unary_expression .

    $default  reduce using rule 244 (unary_expression)


state 261

  267 $@25: .
  268 primary_expression: '(' . $@25 expression ')'

    $default  reduce using rule 267 ($@25)

    $@25  go to state 175


state 262

  239 unary_expression: "++" $@22 unary_expression .

    $default  reduce using rule 239 (unary_expression)


state 263

  241 unary_expression: "--" $@23 unary_expression .

    $default  reduce using rule 241 (unary_expression)


state 264

   86 pointer: . '*' $@6 factorizacion_pointer
  107 type_name: specifier_qualifier_list .  [')']
  108          | specifier_qualifier_list . abstract_declarator
  109 abstract_declarator: . pointer
  110                    | . direct_abstract_declarator
  111                    | . pointer direct_abstract_declarator
  112 direct_abstract_declarator: . '(' abstract_declarator ')'
  113                           | . '[' ']'
  114                           | . '[' constant_expression ']'
  115                           | . direct_abstract_declarator '[' ']'
  116                           | . direct_abstract_declarator '[' constant_expression ']'
  117                           | . '(' ')'
  118                           | . '(' parameter_type_list ')'
  119                           | . direct_abstract_declarator '(' ')'
  120                           | . direct_abstract_declarator '(' parameter_type_list ')'

    '('  shift, and go to state 354
    '['  shift, and go to state 249
    '*'  shift, and go to state 23

    $default  reduce using rule 107 (type_name)

    pointer                     go to state 355
    abstract_declarator         go to state 356
    direct_abstract_declarator  go to state 253


state 265

  236 cast_expression: '(' $@21 type_name . ')' cast_expression

    ')'  shift, and go to state 357


state 266

  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error
  268 primary_expression: '(' $@25 expression . ')'

    ','  shift, and go to state 247
    ')'  shift, and go to state 358


state 267

  194 logical_or_expression: logical_or_expression "||" error .

    $default  reduce using rule 194 (logical_or_expression)


state 268

  193 logical_or_expression: logical_or_expression "||" logical_and_expression .  ["||", ';', ',', '}', ':', ')', ']', '?']
  196 logical_and_expression: logical_and_expression . "&&" inclusive_or_expression
  197                       | logical_and_expression . "&&" error

    "&&"  shift, and go to state 179

    $default  reduce using rule 193 (logical_or_expression)


state 269

  190 conditional_expression: logical_or_expression '?' error . ':' conditional_expression

    ':'  shift, and go to state 359


state 270

  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error
  189 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
  191                       | logical_or_expression '?' expression . ':' error

    ','  shift, and go to state 247
    ':'  shift, and go to state 360


state 271

  197 logical_and_expression: logical_and_expression "&&" error .

    $default  reduce using rule 197 (logical_and_expression)


state 272

  196 logical_and_expression: logical_and_expression "&&" inclusive_or_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?']
  199 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 180

    $default  reduce using rule 196 (logical_and_expression)


state 273

  199 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?', '|']
  201 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 181

    $default  reduce using rule 199 (inclusive_or_expression)


state 274

  201 exclusive_or_expression: exclusive_or_expression '^' and_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?', '|', '^']
  203 and_expression: and_expression . '&' equality_expression
  204               | and_expression . '&' error

    '&'  shift, and go to state 182

    $default  reduce using rule 201 (exclusive_or_expression)


state 275

  204 and_expression: and_expression '&' error .

    $default  reduce using rule 204 (and_expression)


state 276

  203 and_expression: and_expression '&' equality_expression .  ["||", "&&", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&']
  206 equality_expression: equality_expression . "==" relational_expression
  207                    | equality_expression . "==" error
  208                    | equality_expression . "!=" relational_expression
  209                    | equality_expression . "!=" error

    "=="  shift, and go to state 183
    "!="  shift, and go to state 184

    $default  reduce using rule 203 (and_expression)


state 277

  207 equality_expression: equality_expression "==" error .

    $default  reduce using rule 207 (equality_expression)


state 278

  206 equality_expression: equality_expression "==" relational_expression .  ["||", "&&", "==", "!=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&']
  211 relational_expression: relational_expression . '<' shift_expression
  212                      | relational_expression . '<' error
  213                      | relational_expression . '>' shift_expression
  214                      | relational_expression . '>' error
  215                      | relational_expression . "<=" shift_expression
  216                      | relational_expression . "<=" error
  217                      | relational_expression . ">=" shift_expression
  218                      | relational_expression . ">=" error

    ">="  shift, and go to state 185
    "<="  shift, and go to state 186
    '<'   shift, and go to state 187
    '>'   shift, and go to state 188

    $default  reduce using rule 206 (equality_expression)


state 279

  209 equality_expression: equality_expression "!=" error .

    $default  reduce using rule 209 (equality_expression)


state 280

  208 equality_expression: equality_expression "!=" relational_expression .  ["||", "&&", "==", "!=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&']
  211 relational_expression: relational_expression . '<' shift_expression
  212                      | relational_expression . '<' error
  213                      | relational_expression . '>' shift_expression
  214                      | relational_expression . '>' error
  215                      | relational_expression . "<=" shift_expression
  216                      | relational_expression . "<=" error
  217                      | relational_expression . ">=" shift_expression
  218                      | relational_expression . ">=" error

    ">="  shift, and go to state 185
    "<="  shift, and go to state 186
    '<'   shift, and go to state 187
    '>'   shift, and go to state 188

    $default  reduce using rule 208 (equality_expression)


state 281

  218 relational_expression: relational_expression ">=" error .

    $default  reduce using rule 218 (relational_expression)


state 282

  217 relational_expression: relational_expression ">=" shift_expression .  ["||", "&&", "==", "!=", ">=", "<=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  220 shift_expression: shift_expression . "<<" additive_expression
  221                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 189
    ">>"  shift, and go to state 190

    $default  reduce using rule 217 (relational_expression)


state 283

  216 relational_expression: relational_expression "<=" error .

    $default  reduce using rule 216 (relational_expression)


state 284

  215 relational_expression: relational_expression "<=" shift_expression .  ["||", "&&", "==", "!=", ">=", "<=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  220 shift_expression: shift_expression . "<<" additive_expression
  221                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 189
    ">>"  shift, and go to state 190

    $default  reduce using rule 215 (relational_expression)


state 285

  212 relational_expression: relational_expression '<' error .

    $default  reduce using rule 212 (relational_expression)


state 286

  211 relational_expression: relational_expression '<' shift_expression .  ["||", "&&", "==", "!=", ">=", "<=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  220 shift_expression: shift_expression . "<<" additive_expression
  221                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 189
    ">>"  shift, and go to state 190

    $default  reduce using rule 211 (relational_expression)


state 287

  214 relational_expression: relational_expression '>' error .

    $default  reduce using rule 214 (relational_expression)


state 288

  213 relational_expression: relational_expression '>' shift_expression .  ["||", "&&", "==", "!=", ">=", "<=", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  220 shift_expression: shift_expression . "<<" additive_expression
  221                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 189
    ">>"  shift, and go to state 190

    $default  reduce using rule 213 (relational_expression)


state 289

  220 shift_expression: shift_expression "<<" additive_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  223 additive_expression: additive_expression . '+' multiplicative_expression
  224                    | additive_expression . '+' error
  225                    | additive_expression . '-' multiplicative_expression
  226                    | additive_expression . '-' error

    '+'  shift, and go to state 191
    '-'  shift, and go to state 192

    $default  reduce using rule 220 (shift_expression)


state 290

  221 shift_expression: shift_expression ">>" additive_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>']
  223 additive_expression: additive_expression . '+' multiplicative_expression
  224                    | additive_expression . '+' error
  225                    | additive_expression . '-' multiplicative_expression
  226                    | additive_expression . '-' error

    '+'  shift, and go to state 191
    '-'  shift, and go to state 192

    $default  reduce using rule 221 (shift_expression)


state 291

  224 additive_expression: additive_expression '+' error .

    $default  reduce using rule 224 (additive_expression)


state 292

  223 additive_expression: additive_expression '+' multiplicative_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>', '+', '-']
  228 multiplicative_expression: multiplicative_expression . '*' cast_expression
  229                          | multiplicative_expression . '*' error
  230                          | multiplicative_expression . '/' cast_expression
  231                          | multiplicative_expression . '/' error
  232                          | multiplicative_expression . '%' cast_expression
  233                          | multiplicative_expression . '%' error

    '*'  shift, and go to state 193
    '/'  shift, and go to state 194
    '%'  shift, and go to state 195

    $default  reduce using rule 223 (additive_expression)


state 293

  226 additive_expression: additive_expression '-' error .

    $default  reduce using rule 226 (additive_expression)


state 294

  225 additive_expression: additive_expression '-' multiplicative_expression .  ["||", "&&", "==", "!=", ">=", "<=", "<<", ">>", ';', ',', '}', ':', ')', ']', '?', '|', '^', '&', '<', '>', '+', '-']
  228 multiplicative_expression: multiplicative_expression . '*' cast_expression
  229                          | multiplicative_expression . '*' error
  230                          | multiplicative_expression . '/' cast_expression
  231                          | multiplicative_expression . '/' error
  232                          | multiplicative_expression . '%' cast_expression
  233                          | multiplicative_expression . '%' error

    '*'  shift, and go to state 193
    '/'  shift, and go to state 194
    '%'  shift, and go to state 195

    $default  reduce using rule 225 (additive_expression)


state 295

  229 multiplicative_expression: multiplicative_expression '*' error .

    $default  reduce using rule 229 (multiplicative_expression)


state 296

  228 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 228 (multiplicative_expression)


state 297

  231 multiplicative_expression: multiplicative_expression '/' error .

    $default  reduce using rule 231 (multiplicative_expression)


state 298

  230 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 230 (multiplicative_expression)


state 299

  233 multiplicative_expression: multiplicative_expression '%' error .

    $default  reduce using rule 233 (multiplicative_expression)


state 300

  232 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 232 (multiplicative_expression)


state 301

  258 postfix_expression: postfix_expression "->" IDENTIFICADOR .

    $default  reduce using rule 258 (postfix_expression)


state 302

  255 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 255 (postfix_expression)


state 303

  261 argument_expression_list: assignment_expression .

    $default  reduce using rule 261 (argument_expression_list)


state 304

  256 postfix_expression: postfix_expression '(' argument_expression_list . ')'
  262 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 361
    ')'  shift, and go to state 362


state 305

  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error
  254 postfix_expression: postfix_expression '[' expression . ']'

    ','  shift, and go to state 247
    ']'  shift, and go to state 363


state 306

  257 postfix_expression: postfix_expression '.' IDENTIFICADOR .

    $default  reduce using rule 257 (postfix_expression)


state 307

   68 factorizacion_enum_specifier: IDENTIFICADOR '{' enumerator_list '}' .

    $default  reduce using rule 68 (factorizacion_enum_specifier)


state 308

   73 enumerator: IDENTIFICADOR '=' constant_expression .

    $default  reduce using rule 73 (enumerator)


state 309

   71 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 71 (enumerator_list)


state 310

  102 initializer: . assignment_expression
  103            | . '{' initializer_list '}'
  104            | . '{' initializer_list ',' '}'
  104            | '{' initializer_list ',' . '}'
  106 initializer_list: initializer_list ',' . initializer
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '{'                                  shift, and go to state 128
    '}'                                  shift, and go to state 364
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    initializer                go to state 365
    assignment_expression      go to state 130
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 311

  103 initializer: '{' initializer_list '}' .

    $default  reduce using rule 103 (initializer)


state 312

  175 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 175 (assignment_expression)


state 313

   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   49 factorizacion_struct_or_union_specifier: IDENTIFICADOR '{' $@3 struct_declaration_list . '}'
   51 struct_or_union: . "struct"
   52                | . "union"
   54 struct_declaration_list: struct_declaration_list . struct_declaration
   55 struct_declaration: . specifier_qualifier_list struct_declarator_list ';'
   56 specifier_qualifier_list: . type_specifier
   57                         | . type_specifier specifier_qualifier_list
   58                         | . type_qualifier
   59                         | . type_qualifier specifier_qualifier_list
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier

    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '}'                shift, and go to state 366

    type_specifier             go to state 222
    type_qualifier             go to state 223
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 317
    specifier_qualifier_list   go to state 226
    enum_specifier             go to state 34


state 314

   57 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 57 (specifier_qualifier_list)


state 315

   59 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 59 (specifier_qualifier_list)


state 316

   47 factorizacion_struct_or_union_specifier: '{' $@2 struct_declaration_list '}' .

    $default  reduce using rule 47 (factorizacion_struct_or_union_specifier)


state 317

   54 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 54 (struct_declaration_list)


state 318

   63 struct_declarator: ':' . constant_expression
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 367
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 319

   55 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
   61 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ';'  shift, and go to state 368
    ','  shift, and go to state 369


state 320

   60 struct_declarator_list: struct_declarator .

    $default  reduce using rule 60 (struct_declarator_list)


state 321

   62 struct_declarator: declarator .  [';', ',']
   64                  | declarator . ':' constant_expression

    ':'  shift, and go to state 370

    $default  reduce using rule 62 (struct_declarator)


state 322

  150 factorizacion_selection_statement: '(' . expression ')' statement
  151                                  | '(' . expression ')' statement "else" statement
  152                                  | '(' . error
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 371
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 372
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 323

  147 selection_statement: "if" $@12 factorizacion_selection_statement .

    $default  reduce using rule 147 (selection_statement)


state 324

  149 selection_statement: "switch" $@13 '(' . expression ')' statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 373
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 325

  154 iteration_statement: "while" $@14 '(' . expression ')' statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 374
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 326

  156 iteration_statement: "do" $@15 statement . "while" '(' expression ')' ';'

    "while"  shift, and go to state 375


state 327

  136 expression_statement: . ';'
  137                     | . expression ';'
  159 factorizacion_iteration_statement: '(' . expression_statement expression_statement ')' statement
  160                                  | '(' . expression_statement expression_statement expression ')' statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression_statement       go to state 376
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 328

  158 iteration_statement: "for" $@16 factorizacion_iteration_statement .

    $default  reduce using rule 158 (iteration_statement)


state 329

  132 labeled_statement: "case" $@9 constant_expression . ':' statement

    ':'  shift, and go to state 377


state 330

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  135                  | "default" $@10 ':' . statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 378
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 331

  162 jump_statement: "goto" $@17 IDENTIFICADOR . ';'

    ';'  shift, and go to state 379


state 332

  164 jump_statement: "continue" $@18 ';' .

    $default  reduce using rule 164 (jump_statement)


state 333

  166 jump_statement: "break" $@19 ';' .

    $default  reduce using rule 166 (jump_statement)


state 334

  169 factorizacion_jump_statement: ';' .

    $default  reduce using rule 169 (factorizacion_jump_statement)


state 335

  168 jump_statement: "return" $@20 factorizacion_jump_statement .

    $default  reduce using rule 168 (jump_statement)


state 336

  170 factorizacion_jump_statement: expression . ';'
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ';'  shift, and go to state 380
    ','  shift, and go to state 247


state 337

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  128                  | IDENTIFICADOR $@7 ':' . statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 381
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 338

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  130                  | NOMBRE_DE_TYPEDEF $@8 ':' . statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 382
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 339

  143 factorizacion_compound_statement: declaration_list statement_list '}' .

    $default  reduce using rule 143 (factorizacion_compound_statement)


state 340

  173 expression: expression ',' error .

    $default  reduce using rule 173 (expression)


state 341

  172 expression: expression ',' assignment_expression .

    $default  reduce using rule 172 (expression)


state 342

  117 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 117 (direct_abstract_declarator)


state 343

  118 direct_abstract_declarator: '(' parameter_type_list . ')'

    ')'  shift, and go to state 383


state 344

  112 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 384


state 345

  113 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 113 (direct_abstract_declarator)


state 346

  114 direct_abstract_declarator: '[' constant_expression . ']'

    ']'  shift, and go to state 385


state 347

  111 abstract_declarator: pointer direct_abstract_declarator .  [',', ')']
  115 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  116                           | direct_abstract_declarator . '[' constant_expression ']'
  119                           | direct_abstract_declarator . '(' ')'
  120                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 348
    '['  shift, and go to state 349

    $default  reduce using rule 111 (abstract_declarator)


state 348

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   93 parameter_type_list: . parameter_list
   94                    | . parameter_list ',' "..."
   95 parameter_list: . parameter_declaration
   96               | . parameter_list ',' parameter_declaration
   97 parameter_declaration: . declaration_specifiers declarator
   98                      | . declaration_specifiers abstract_declarator
   99                      | . declaration_specifiers
  119 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
  120                           | direct_abstract_declarator '(' . parameter_type_list ')'

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    ')'                shift, and go to state 386

    declaration_specifiers     go to state 165
    storage_class_specifier    go to state 29
    type_specifier             go to state 30
    type_qualifier             go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_type_list        go to state 387
    parameter_list             go to state 168
    parameter_declaration      go to state 169


state 349

  115 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
  116                           | direct_abstract_declarator '[' . constant_expression ']'
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    ']'                                  shift, and go to state 388
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 389
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 350

   94 parameter_type_list: parameter_list ',' "..." .

    $default  reduce using rule 94 (parameter_type_list)


state 351

   96 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 96 (parameter_list)


state 352

  101 identifier_list: identifier_list ',' IDENTIFICADOR .

    $default  reduce using rule 101 (identifier_list)


state 353

  246 factorizacion_unary_expression: '(' type_name . ')'

    ')'  shift, and go to state 390


state 354

   13 declaration_specifiers: . storage_class_specifier
   14                       | . storage_class_specifier declaration_specifiers
   15                       | . type_specifier
   16                       | . type_specifier declaration_specifiers
   17                       | . type_qualifier
   18                       | . type_qualifier declaration_specifiers
   25 storage_class_specifier: . "auto"
   26                        | . "register"
   27                        | . "static"
   28                        | . "extern"
   29                        | . "typedef"
   30 type_specifier: . "void"
   31               | . "char"
   32               | . "short"
   33               | . "int"
   34               | . "long"
   35               | . "float"
   36               | . "double"
   37               | . "signed"
   38               | . "unsigned"
   39               | . struct_or_union_specifier
   40               | . enum_specifier
   41               | . NOMBRE_DE_TYPEDEF
   42 type_qualifier: . "const"
   43               | . "volatile"
   45 struct_or_union_specifier: . struct_or_union $@1 factorizacion_struct_or_union_specifier
   51 struct_or_union: . "struct"
   52                | . "union"
   66 enum_specifier: . "enum" $@4 factorizacion_enum_specifier
   86 pointer: . '*' $@6 factorizacion_pointer
   93 parameter_type_list: . parameter_list
   94                    | . parameter_list ',' "..."
   95 parameter_list: . parameter_declaration
   96               | . parameter_list ',' parameter_declaration
   97 parameter_declaration: . declaration_specifiers declarator
   98                      | . declaration_specifiers abstract_declarator
   99                      | . declaration_specifiers
  109 abstract_declarator: . pointer
  110                    | . direct_abstract_declarator
  111                    | . pointer direct_abstract_declarator
  112 direct_abstract_declarator: . '(' abstract_declarator ')'
  112                           | '(' . abstract_declarator ')'
  113                           | . '[' ']'
  114                           | . '[' constant_expression ']'
  115                           | . direct_abstract_declarator '[' ']'
  116                           | . direct_abstract_declarator '[' constant_expression ']'
  117                           | . '(' ')'
  117                           | '(' . ')'
  118                           | . '(' parameter_type_list ')'
  118                           | '(' . parameter_type_list ')'
  119                           | . direct_abstract_declarator '(' ')'
  120                           | . direct_abstract_declarator '(' parameter_type_list ')'

    "typedef"          shift, and go to state 1
    "extern"           shift, and go to state 2
    "static"           shift, and go to state 3
    "auto"             shift, and go to state 4
    "register"         shift, and go to state 5
    "void"             shift, and go to state 6
    "char"             shift, and go to state 7
    "short"            shift, and go to state 8
    "int"              shift, and go to state 9
    "long"             shift, and go to state 10
    "float"            shift, and go to state 11
    "double"           shift, and go to state 12
    "signed"           shift, and go to state 13
    "unsigned"         shift, and go to state 14
    "const"            shift, and go to state 15
    "volatile"         shift, and go to state 16
    "struct"           shift, and go to state 17
    "union"            shift, and go to state 18
    "enum"             shift, and go to state 19
    NOMBRE_DE_TYPEDEF  shift, and go to state 21
    '('                shift, and go to state 354
    ')'                shift, and go to state 342
    '['                shift, and go to state 249
    '*'                shift, and go to state 23

    declaration_specifiers      go to state 165
    storage_class_specifier     go to state 29
    type_specifier              go to state 30
    type_qualifier              go to state 31
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    pointer                     go to state 355
    parameter_type_list         go to state 343
    parameter_list              go to state 168
    parameter_declaration       go to state 169
    abstract_declarator         go to state 344
    direct_abstract_declarator  go to state 253


state 355

  109 abstract_declarator: pointer .  [')']
  111                    | pointer . direct_abstract_declarator
  112 direct_abstract_declarator: . '(' abstract_declarator ')'
  113                           | . '[' ']'
  114                           | . '[' constant_expression ']'
  115                           | . direct_abstract_declarator '[' ']'
  116                           | . direct_abstract_declarator '[' constant_expression ']'
  117                           | . '(' ')'
  118                           | . '(' parameter_type_list ')'
  119                           | . direct_abstract_declarator '(' ')'
  120                           | . direct_abstract_declarator '(' parameter_type_list ')'

    '('  shift, and go to state 354
    '['  shift, and go to state 249

    $default  reduce using rule 109 (abstract_declarator)

    direct_abstract_declarator  go to state 347


state 356

  108 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 108 (type_name)


state 357

  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  236                | '(' $@21 type_name ')' . cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    cast_expression     go to state 391
    unary_expression    go to state 114
    unary_operator      go to state 115
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constante_entera    go to state 118
    constante_real      go to state 119


state 358

  268 primary_expression: '(' $@25 expression ')' .

    $default  reduce using rule 268 (primary_expression)


state 359

  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  190                       | logical_or_expression '?' error ':' . conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    conditional_expression     go to state 392
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 360

  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  189                       | logical_or_expression '?' expression ':' . conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  191                       | logical_or_expression '?' expression ':' . error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    error                                shift, and go to state 393
    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    conditional_expression     go to state 394
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 361

  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  262 argument_expression_list: argument_expression_list ',' . assignment_expression
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    assignment_expression      go to state 395
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 362

  256 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 256 (postfix_expression)


state 363

  254 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 254 (postfix_expression)


state 364

  104 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 104 (initializer)


state 365

  106 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 106 (initializer_list)


state 366

   49 factorizacion_struct_or_union_specifier: IDENTIFICADOR '{' $@3 struct_declaration_list '}' .

    $default  reduce using rule 49 (factorizacion_struct_or_union_specifier)


state 367

   63 struct_declarator: ':' constant_expression .

    $default  reduce using rule 63 (struct_declarator)


state 368

   55 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 55 (struct_declaration)


state 369

   61 struct_declarator_list: struct_declarator_list ',' . struct_declarator
   62 struct_declarator: . declarator
   63                  | . ':' constant_expression
   64                  | . declarator ':' constant_expression
   74 declarator: . pointer direct_declarator
   75           | . direct_declarator
   76 direct_declarator: . IDENTIFICADOR
   77                  | . '(' declarator ')'
   78                  | . direct_declarator '[' constant_expression ']'
   79                  | . direct_declarator '[' ']'
   81                  | . direct_declarator '(' $@5 factorizacion_direct_declarator
   86 pointer: . '*' $@6 factorizacion_pointer

    IDENTIFICADOR  shift, and go to state 20
    ':'            shift, and go to state 318
    '('            shift, and go to state 22
    '*'            shift, and go to state 23

    struct_declarator  go to state 396
    declarator         go to state 321
    direct_declarator  go to state 36
    pointer            go to state 37


state 370

   64 struct_declarator: declarator ':' . constant_expression
  187 constant_expression: . conditional_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    constant_expression        go to state 397
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 114
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 371

  152 factorizacion_selection_statement: '(' error .

    $default  reduce using rule 152 (factorizacion_selection_statement)


state 372

  150 factorizacion_selection_statement: '(' expression . ')' statement
  151                                  | '(' expression . ')' statement "else" statement
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ','  shift, and go to state 247
    ')'  shift, and go to state 398


state 373

  149 selection_statement: "switch" $@13 '(' expression . ')' statement
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ','  shift, and go to state 247
    ')'  shift, and go to state 399


state 374

  154 iteration_statement: "while" $@14 '(' expression . ')' statement
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ','  shift, and go to state 247
    ')'  shift, and go to state 400


state 375

  156 iteration_statement: "do" $@15 statement "while" . '(' expression ')' ';'

    '('  shift, and go to state 401


state 376

  136 expression_statement: . ';'
  137                     | . expression ';'
  159 factorizacion_iteration_statement: '(' expression_statement . expression_statement ')' statement
  160                                  | '(' expression_statement . expression_statement expression ')' statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression_statement       go to state 402
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 377

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  132                  | "case" $@9 constant_expression ':' . statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 403
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 378

  135 labeled_statement: "default" $@10 ':' statement .

    $default  reduce using rule 135 (labeled_statement)


state 379

  162 jump_statement: "goto" $@17 IDENTIFICADOR ';' .

    $default  reduce using rule 162 (jump_statement)


state 380

  170 factorizacion_jump_statement: expression ';' .

    $default  reduce using rule 170 (factorizacion_jump_statement)


state 381

  128 labeled_statement: IDENTIFICADOR $@7 ':' statement .

    $default  reduce using rule 128 (labeled_statement)


state 382

  130 labeled_statement: NOMBRE_DE_TYPEDEF $@8 ':' statement .

    $default  reduce using rule 130 (labeled_statement)


state 383

  118 direct_abstract_declarator: '(' parameter_type_list ')' .

    $default  reduce using rule 118 (direct_abstract_declarator)


state 384

  112 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 112 (direct_abstract_declarator)


state 385

  114 direct_abstract_declarator: '[' constant_expression ']' .

    $default  reduce using rule 114 (direct_abstract_declarator)


state 386

  119 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 119 (direct_abstract_declarator)


state 387

  120 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 404


state 388

  115 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 115 (direct_abstract_declarator)


state 389

  116 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 405


state 390

  246 factorizacion_unary_expression: '(' type_name ')' .

    $default  reduce using rule 246 (factorizacion_unary_expression)


state 391

  236 cast_expression: '(' $@21 type_name ')' cast_expression .

    $default  reduce using rule 236 (cast_expression)


state 392

  190 conditional_expression: logical_or_expression '?' error ':' conditional_expression .

    $default  reduce using rule 190 (conditional_expression)


state 393

  191 conditional_expression: logical_or_expression '?' expression ':' error .

    $default  reduce using rule 191 (conditional_expression)


state 394

  189 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 189 (conditional_expression)


state 395

  262 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 262 (argument_expression_list)


state 396

   61 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 61 (struct_declarator_list)


state 397

   64 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 64 (struct_declarator)


state 398

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  150 factorizacion_selection_statement: '(' expression ')' . statement
  151                                  | '(' expression ')' . statement "else" statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 406
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 399

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  149                    | "switch" $@13 '(' expression ')' . statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 407
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 400

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  154                    | "while" $@14 '(' expression ')' . statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 408
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 401

  156 iteration_statement: "do" $@15 statement "while" '(' . expression ')' ';'
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 409
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 402

  159 factorizacion_iteration_statement: '(' expression_statement expression_statement . ')' statement
  160                                  | '(' expression_statement expression_statement . expression ')' statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 90
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    '('                                  shift, and go to state 93
    ')'                                  shift, and go to state 410
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    expression                 go to state 411
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 403

  132 labeled_statement: "case" $@9 constant_expression ':' statement .

    $default  reduce using rule 132 (labeled_statement)


state 404

  120 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 120 (direct_abstract_declarator)


state 405

  116 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' .

    $default  reduce using rule 116 (direct_abstract_declarator)


state 406

  150 factorizacion_selection_statement: '(' expression ')' statement .  [CONSTANTE_ENTERA_INT_TYPE, CONSTANTE_ENTERA_UNSIGNED_INT_TYPE, CONSTANTE_ENTERA_LONG_TYPE, CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE, CONSTANTE_REAL_FLOAT_TYPE, CONSTANTE_REAL_LONG_DOUBLE_TYPE, CONSTANTE_REAL_DOUBLE_TYPE, LITERAL_CADENA, "if", "switch", "while", "do", "for", "case", "default", "goto", "continue", "break", "return", "sizeof", IDENTIFICADOR, NOMBRE_DE_TYPEDEF, "++", "--", ';', '{', '}', '(', '*', '&', '+', '-', '~', '!']
  151                                  | '(' expression ')' statement . "else" statement

    "else"  shift, and go to state 412

    $default  reduce using rule 150 (factorizacion_selection_statement)


state 407

  149 selection_statement: "switch" $@13 '(' expression ')' statement .

    $default  reduce using rule 149 (selection_statement)


state 408

  154 iteration_statement: "while" $@14 '(' expression ')' statement .

    $default  reduce using rule 154 (iteration_statement)


state 409

  156 iteration_statement: "do" $@15 statement "while" '(' expression . ')' ';'
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ','  shift, and go to state 247
    ')'  shift, and go to state 413


state 410

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  159 factorizacion_iteration_statement: '(' expression_statement expression_statement ')' . statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 414
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 411

  160 factorizacion_iteration_statement: '(' expression_statement expression_statement expression . ')' statement
  172 expression: expression . ',' assignment_expression
  173           | expression . ',' error

    ','  shift, and go to state 247
    ')'  shift, and go to state 415


state 412

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  151 factorizacion_selection_statement: '(' expression ')' statement "else" . statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 416
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 413

  156 iteration_statement: "do" $@15 statement "while" '(' expression ')' . ';'

    ';'  shift, and go to state 417


state 414

  159 factorizacion_iteration_statement: '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 159 (factorizacion_iteration_statement)


state 415

  121 statement: . labeled_statement
  122          | . expression_statement
  123          | . compound_statement
  124          | . selection_statement
  125          | . iteration_statement
  126          | . jump_statement
  128 labeled_statement: . IDENTIFICADOR $@7 ':' statement
  130                  | . NOMBRE_DE_TYPEDEF $@8 ':' statement
  132                  | . "case" $@9 constant_expression ':' statement
  133                  | . "case" error
  135                  | . "default" $@10 ':' statement
  136 expression_statement: . ';'
  137                     | . expression ';'
  139 compound_statement: . '{' $@11 factorizacion_compound_statement
  147 selection_statement: . "if" $@12 factorizacion_selection_statement
  149                    | . "switch" $@13 '(' expression ')' statement
  154 iteration_statement: . "while" $@14 '(' expression ')' statement
  156                    | . "do" $@15 statement "while" '(' expression ')' ';'
  158                    | . "for" $@16 factorizacion_iteration_statement
  160 factorizacion_iteration_statement: '(' expression_statement expression_statement expression ')' . statement
  162 jump_statement: . "goto" $@17 IDENTIFICADOR ';'
  164               | . "continue" $@18 ';'
  166               | . "break" $@19 ';'
  168               | . "return" $@20 factorizacion_jump_statement
  171 expression: . assignment_expression
  172           | . expression ',' assignment_expression
  173           | . expression ',' error
  174 assignment_expression: . conditional_expression
  175                      | . unary_expression assignment_operator assignment_expression
  188 conditional_expression: . logical_or_expression
  189                       | . logical_or_expression '?' expression ':' conditional_expression
  190                       | . logical_or_expression '?' error ':' conditional_expression
  191                       | . logical_or_expression '?' expression ':' error
  192 logical_or_expression: . logical_and_expression
  193                      | . logical_or_expression "||" logical_and_expression
  194                      | . logical_or_expression "||" error
  195 logical_and_expression: . inclusive_or_expression
  196                       | . logical_and_expression "&&" inclusive_or_expression
  197                       | . logical_and_expression "&&" error
  198 inclusive_or_expression: . exclusive_or_expression
  199                        | . inclusive_or_expression '|' exclusive_or_expression
  200 exclusive_or_expression: . and_expression
  201                        | . exclusive_or_expression '^' and_expression
  202 and_expression: . equality_expression
  203               | . and_expression '&' equality_expression
  204               | . and_expression '&' error
  205 equality_expression: . relational_expression
  206                    | . equality_expression "==" relational_expression
  207                    | . equality_expression "==" error
  208                    | . equality_expression "!=" relational_expression
  209                    | . equality_expression "!=" error
  210 relational_expression: . shift_expression
  211                      | . relational_expression '<' shift_expression
  212                      | . relational_expression '<' error
  213                      | . relational_expression '>' shift_expression
  214                      | . relational_expression '>' error
  215                      | . relational_expression "<=" shift_expression
  216                      | . relational_expression "<=" error
  217                      | . relational_expression ">=" shift_expression
  218                      | . relational_expression ">=" error
  219 shift_expression: . additive_expression
  220                 | . shift_expression "<<" additive_expression
  221                 | . shift_expression ">>" additive_expression
  222 additive_expression: . multiplicative_expression
  223                    | . additive_expression '+' multiplicative_expression
  224                    | . additive_expression '+' error
  225                    | . additive_expression '-' multiplicative_expression
  226                    | . additive_expression '-' error
  227 multiplicative_expression: . cast_expression
  228                          | . multiplicative_expression '*' cast_expression
  229                          | . multiplicative_expression '*' error
  230                          | . multiplicative_expression '/' cast_expression
  231                          | . multiplicative_expression '/' error
  232                          | . multiplicative_expression '%' cast_expression
  233                          | . multiplicative_expression '%' error
  234 cast_expression: . unary_expression
  236                | . '(' $@21 type_name ')' cast_expression
  237 unary_expression: . postfix_expression
  239                 | . "++" $@22 unary_expression
  241                 | . "--" $@23 unary_expression
  242                 | . unary_operator cast_expression
  244                 | . "sizeof" $@24 factorizacion_unary_expression
  247 unary_operator: . '&'
  248               | . '*'
  249               | . '+'
  250               | . '-'
  251               | . '~'
  252               | . '!'
  253 postfix_expression: . primary_expression
  254                   | . postfix_expression '[' expression ']'
  255                   | . postfix_expression '(' ')'
  256                   | . postfix_expression '(' argument_expression_list ')'
  257                   | . postfix_expression '.' IDENTIFICADOR
  258                   | . postfix_expression "->" IDENTIFICADOR
  259                   | . postfix_expression "++"
  260                   | . postfix_expression "--"
  263 primary_expression: . IDENTIFICADOR
  264                   | . constante_entera
  265                   | . constante_real
  266                   | . LITERAL_CADENA
  268                   | . '(' $@25 expression ')'
  269 constante_entera: . CONSTANTE_ENTERA_INT_TYPE
  270                 | . CONSTANTE_ENTERA_UNSIGNED_INT_TYPE
  271                 | . CONSTANTE_ENTERA_LONG_TYPE
  272                 | . CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE
  273 constante_real: . CONSTANTE_REAL_FLOAT_TYPE
  274               | . CONSTANTE_REAL_DOUBLE_TYPE
  275               | . CONSTANTE_REAL_LONG_DOUBLE_TYPE

    CONSTANTE_ENTERA_INT_TYPE            shift, and go to state 81
    CONSTANTE_ENTERA_UNSIGNED_INT_TYPE   shift, and go to state 82
    CONSTANTE_ENTERA_LONG_TYPE           shift, and go to state 83
    CONSTANTE_ENTERA_UNSIGNED_LONG_TYPE  shift, and go to state 84
    CONSTANTE_REAL_FLOAT_TYPE            shift, and go to state 85
    CONSTANTE_REAL_LONG_DOUBLE_TYPE      shift, and go to state 86
    CONSTANTE_REAL_DOUBLE_TYPE           shift, and go to state 87
    LITERAL_CADENA                       shift, and go to state 88
    "if"                                 shift, and go to state 136
    "switch"                             shift, and go to state 137
    "while"                              shift, and go to state 138
    "do"                                 shift, and go to state 139
    "for"                                shift, and go to state 140
    "case"                               shift, and go to state 141
    "default"                            shift, and go to state 142
    "goto"                               shift, and go to state 143
    "continue"                           shift, and go to state 144
    "break"                              shift, and go to state 145
    "return"                             shift, and go to state 146
    "sizeof"                             shift, and go to state 89
    IDENTIFICADOR                        shift, and go to state 147
    NOMBRE_DE_TYPEDEF                    shift, and go to state 243
    "++"                                 shift, and go to state 91
    "--"                                 shift, and go to state 92
    ';'                                  shift, and go to state 149
    '{'                                  shift, and go to state 51
    '('                                  shift, and go to state 93
    '*'                                  shift, and go to state 95
    '&'                                  shift, and go to state 96
    '+'                                  shift, and go to state 97
    '-'                                  shift, and go to state 98
    '~'                                  shift, and go to state 99
    '!'                                  shift, and go to state 100

    statement                  go to state 418
    labeled_statement          go to state 153
    expression_statement       go to state 154
    compound_statement         go to state 155
    selection_statement        go to state 158
    iteration_statement        go to state 159
    jump_statement             go to state 160
    expression                 go to state 161
    assignment_expression      go to state 162
    conditional_expression     go to state 131
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    cast_expression            go to state 113
    unary_expression           go to state 132
    unary_operator             go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constante_entera           go to state 118
    constante_real             go to state 119


state 416

  151 factorizacion_selection_statement: '(' expression ')' statement "else" statement .

    $default  reduce using rule 151 (factorizacion_selection_statement)


state 417

  156 iteration_statement: "do" $@15 statement "while" '(' expression ')' ';' .

    $default  reduce using rule 156 (iteration_statement)


state 418

  160 factorizacion_iteration_statement: '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 160 (factorizacion_iteration_statement)
